{"version":3,"sources":["services/kolmogorovSmirnov.js","components/typeSelector.js","components/header.js","components/algoritmos/algoritmoCuadradosMedios.js","components/algoritmos/algoritmoMultiplicadorConstante.js","components/algoritmos/algoritmoLineal.js","components/algoritmos/algortimoCongruencialMultiplicativo.js","components/algoritmos/algortimoCongruencialAditivo.js","components/algoritmos/algortimoCongruencialCuadratico.js","components/algoritmos/algoritmoProductosMedios.js","components/pruebas/pruebaVarianza.js","components/pruebas/pruebaUniformidadChiCuadrada.js","components/pruebas/pruebaHuecos.js","components/pruebas/pruebaIndCorrArrAbMed.js","components/pruebas/pruebaIndepCorrArrAb.js","components/pruebas/pruebaMedias.js","components/pruebas/pruebaPoker.js","components/pruebas/pruebaSeries.js","components/pruebas/pruebaUniformidadKolSmir.js","components/metodos/metodoConvolucion.js","components/metodos/metodoTransformadaInversa.js","App.js","serviceWorker.js","index.js","services/algorithmFunctions.js"],"names":["table","module","exports","getKormorovSmirnov","alpha","nums","TypeSelector","className","Dropdown","Toggle","Menu","Item","to","Header","AlgoritmoCuadradosMedios","useState","d","setD","seed","setSeed","amount","setAmount","generatedNums","setGeneratedNums","useEffect","seedLength","toString","length","getNumsObj","y","x","r","for","id","type","min","max","value","onChange","e","target","onClick","tempArr","seedSquare","Math","pow","middleSeedValues","modifyNums","getMiddleValues","push","transformToR","i","generateNums","scope","map","AlgoritmoMultiplicadorConstante","a","setA","unvalidA","setUnvalidA","class","role","seedProduct","console","log","AlgoritmoLineal","c","setC","m","setM","divR","parseInt","tempY","toFixed","AlgoritmoCongruencialMultiplicativo","AlgoritmoCongruencialAditivo","seeds","setSeeds","n","setN","currentSeed","setCurrentSeed","index","xi","xi_n","xi_1","tempSeeds","AlgoritmoCongruencialCuadratico","b","setB","x2","x1","AlgoritmoProductosMedios","seed2","setSeed2","seed2Length","PruebaVarianza","currentNum","setCurrentNum","numbersCSVString","setNumbersCSVString","numbers","setNumbers","acepta","setAcepta","testRun","setTestRun","media","setMedia","setAlpha","limitI","setLimitI","limitS","setLimitS","variance","setVariance","degreeFreed","temp","chiSquareInverse","invChiSquareCDF","reduce","prev","curr","Number","parseFloat","split","addCSVValues","num","sum","calculateMed","PruebaUnidormidadChiCuadrada","chiSum","setChiSum","chiValue","setChiValue","testTable","setTestTable","ei","tempEi","oi","filter","eioisquaredei","interval","eioiei","getObject","calculateUni","PruebaHuecos","minInter","setMinInter","maxInter","setMaxInter","setTable","H","setH","estTotal","setEstTotal","setDisplay","X2","setx2","normalizeList","list","newList","forEach","fillTable","getOi","firstTable","getEi","getEstadistico","firstOne","indexOf","f","h","holes","k","obj","total","htmlFor","addValueToArray","normList","calculate","key","PruebaCorrArrAbMed","N","C0","setC0","N1","setN1","N0","setN0","MC0","setMC0","VariazaC0","setVariazaC0","Z0","setZ0","countSwitch","swithflag","count1","count0","mc0","variazaC0","standardNormalTable","val","z0","abs","sqrt","prueba","PruebaIndepCorrArrAb","setNums","corridas","setCorridas","mCo","setMco","chiCoSq","setChicoSq","zo","setZo","size","setSize","compareAdjacent","s","calculateCorrida","flag","Co","calcMCO","calcChiCo","calcZo","co","mco","chiCo","PruebaMedias","PruebaPoker","todoDif","unPar","dosPares","unaTercia","terciaPar","poker","quintilla","categories","setCategories","setEi","eiOi","setEiOi","x20","setx20","chi2","setChi2","prob5D","prob3D","prob4D","solve5D","tempCat","dosPar","str","first","second","third","fourth","fifth","all","includes","count","handleClasifications","td","unP","dosP","unT","terciaP","p","q","chisq","sorted","replace","substring","sort","join","PruebaSerie","setCuadrants","numbersLength","setNumbersLength","x2Total","setX2Total","calculateSeriesTest","tempM","notFound","ibase2","closestSquareTable","coordinates","xValue","yValue","base","coordX","coordY","range","tableCuadrnts","j","lowerX","higherX","lowerY","higherY","ammountByCuadrant","tempOi","Array","fill","tempx2Vals","tempx2TotalVal","tempTestTable","PruebaUniformidadKolSmir","dTableValue","setDTableValue","dValue","setDValue","dMaxVal","setDMaxVal","dMinVal","setDMinVal","firstRow","secondRow","thirdRow","fourthRow","fifthRow","calculateTest","MetodoConvolucion","options","label","formula","dummy","setDummy","distSelected","setDistSelected","setDistName","distFormulaStr","setDistFormulaStr","display","num_erlang","setNum_erlang","media_erlang","setMedia_erlang","cantidad_piezas_erlang","setCantidad_piezas_erlang","valores_Xi_erlang","setValores_Xi_erlang","norMedia","setNorMedia","norDS","setNorDS","norRandomN","setNorRandomN","norResults","setNorResults","biProb","setBiProb","biN","setBiN","biDef","setBiDef","num_random","valores_Xi","random","tempErTable","multi","tempRis","ri","tempDummy","calcDistErlang","suma_r","resta_r","tabla","suma","resta","calcDistNormal","error","valores_df","calcDistBinomial","option","eri","MetodoTransformadaInversa","uniVarA","setUniVarA","uniVarBmA","setUniVarBmA","uniResults","setUniResults","expVarDelta","setExpVarDelta","expResults","setExpResults","berVarSuccess","setBerVarSuccess","berResults","setBerResults","poiVarProbSize","setPoiVarProbSize","poiVarDelta","setPoiVarDelta","poiResults","setPoiResults","normalResults","setNormalResults","normalRanges","setNormalRanges","getRanges","getNormalValue","ranges","factorial","rval","findInProbTable","needle","prevAcum","acum","calcDistPoisson","acumPx","px","exp","getProbabilityForPoisson","tempPoissonResults","tempSol","tempRanges","tempUniResults","calcDistUniforme","tempExpResults","calcDistExponencial","tempBerResults","calcDistBernoulli","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","numString","stringLength","floor","slice"],"mappings":"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","file":"static/js/main.05a86423.chunk.js","sourcesContent":["const table = [];\n\ntable[0] = [0.995, 0.99, 0.975, 0.95, 0.9];\ntable[1] = [0.9293, 0.9, 0.8418, 0.7763, 0.6837];\ntable[2] = [0.829, 0.7845, 0.7076, 0.636, 0.5648];\ntable[3] = [0.7342, 0.6888, 0.6239, 0.5652, 0.4926];\ntable[4] = [0.6685, 0.6271, 0.5632, 0.5094, 0.4469];\ntable[5] = [0.6166, 0.5774, 0.5192, 0.4679, 0.4103];\ntable[6] = [0.5758, 0.5384, 0.4834, 0.436, 0.3814];\ntable[7] = [0.5418, 0.5065, 0.4542, 0.4096, 0.3582];\ntable[8] = [0.5133, 0.4796, 0.43, 0.3874, 0.339];\ntable[9] = [0.4889, 0.4566, 0.4092, 0.3686, 0.3225];\ntable[10] = [0.4677, 0.4367, 0.3912, 0.3524, 0.3082];\ntable[11] = [0.449, 0.4191, 0.3754, 0.3381, 0.2957];\ntable[12] = [0.4324, 0.4036, 0.3614, 0.3254, 0.2846];\ntable[13] = [0.4176, 0.3897, 0.3448, 0.3141, 0.2747];\ntable[14] = [0.4042, 0.3771, 0.3376, 0.3039, 0.2658];\ntable[15] = [0.392, 0.3657, 0.3283, 0.2947, 0.2577];\ntable[16] = [0.3808, 0.3552, 0.3179, 0.2862, 0.2503];\ntable[17] = [0.3706, 0.3456, 0.3093, 0.2785, 0.2435];\ntable[18] = [0.3611, 0.3368, 0.3014, 0.2713, 0.2435];\ntable[19] = [0.3524, 0.3286, 0.294, 0.2647, 0.2315];\n\nconst getKormorovSmirnov = (alpha, nums) =>{\n    switch(alpha){\n        case .01:\n            return table[nums-1][0]\n        case .02:\n            return table[nums-1][1]\n        case .05:\n            return table[nums-1][2]\n        case .1:\n            return table[nums-1][3]\n        case .2:\n            return table[nums-1][4]\n        default:\n            return 0\n    }\n}\n\nmodule.exports= {getKormorovSmirnov}","import React from 'react'\nimport {Dropdown} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nconst TypeSelector = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-4 d-flex justify-content-between\">\n                    <Dropdown >\n                        <Dropdown.Toggle>\n                            Algoritmos\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/algoritmo-cuadrados-medios'>\n                                    Algoritmo Cuadrados Medios\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/algoritmo-productos-medios'>\n                                    Algoritmo Productos Medios\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/algoritmo-multiplicador-constante'>\n                                    Algoritmo Multiplicador Constante\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/algoritmo-lineal'>\n                                    Algoritmo Lineal\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/algoritmo-congruencial-multiplicativo'>\n                                    Algoritmo Congruencial Multiplicativo\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/algoritmo-congruencial-aditivo'>\n                                    Algoritmo Congruencial Aditivo\n                                    </Link>\n                                </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/algoritmo-congruencial-cuadratico'>\n                                    Algoritmo Congruencial Cuadrático\n                                </Link>\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n                <div className=\"col-4 d-flex justify-content-between\">\n                    <Dropdown>\n                        <Dropdown.Toggle>\n                            Pruebas\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/pruebas-medias'>\n                                    Prueba de Medias\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/prueba-varianza'>\n                                    Prueba de Varianza\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/prueba-uniformidad-chi-cuadrada'>\n                                    Prueba Uniformidad Chi-Cuadrada\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/pruba-uniformidad-kolmogorov-smirnov'>\n                                    Prueba Uniformidad Kolmogorov-Smirnov\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/prueba-independencia-corridas-arriba-abajo'>\n                                    Prueba Independencia Corridas Arriba y Abajo\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/prueba-independencia-corridas-arriba-abajo-media'>\n                                    Prueba Independencia Corridas Arriba y Abajo Media\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/prueba-poker'>\n                                    Prueba Póker\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/prueba-series'>\n                                    Prueba Series\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/prueba-huecos'>\n                                    Prueba Huecos\n                                </Link>\n                            </Dropdown.Item>\n                            {/*\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/pruba-distribucion-chi-cuadrada'>\n                                    Prueba Distribución Chi Chuadrada\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/prueba-kolmogorov-smirnov'>\n                                    Prueba Kolmogorov-Smirnov\n                                </Link>\n                            </Dropdown.Item>\n                            */}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n                <div className=\"col-4 d-flex justify-content-between\">\n                    <Dropdown>\n                        <Dropdown.Toggle>\n                            Metodos\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/metodo-transformada-inversa'>\n                                    Método Transformada Inversa\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link className=\"dropdown-link\" to='/metodo-convolucion'>\n                                    Método Convolución\n                                </Link>\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TypeSelector;","import React from \"react\";\nimport TypeSelector from \"./typeSelector\";\n\nconst Header = () => {\n  return (\n      <div className=\"header\">\n        <h1>Proyecto Simulación </h1>\n      </div>\n  );\n};\n\nexport default Header;\n","import React, {useState, useEffect} from 'react'\nimport modifyNums from '../../services/algorithmFunctions'\n\n\nconst AlgoritmoCuadradosMedios = () =>{\n    let [d, setD] = useState(3);\n    let [seed, setSeed] = useState(100);\n    let [amount, setAmount] = useState(0);\n    let [generatedNums, setGeneratedNums] = useState([]);\n    useEffect(()=>{\n        let seedLength = seed.toString().length;\n        if(d!==seedLength && seedLength>3&&seedLength<7){\n            setD(seedLength);\n        }\n    }, [seed])\n    const getNumsObj = (y,x,r) =>{\n        return {\n            y, \n            x,\n            r\n        };\n    };\n    const generateNums=()=>{\n        let tempArr = [];\n        let seedSquare = Math.pow(seed,2);\n        let middleSeedValues = modifyNums.getMiddleValues(seedSquare, d);\n        tempArr.push(getNumsObj(seedSquare, middleSeedValues, modifyNums.transformToR(middleSeedValues, d)));\n        for(let i = 1; i< amount;i++){\n            seedSquare = Math.pow(tempArr[i-1].x,2);\n            middleSeedValues = modifyNums.getMiddleValues(seedSquare, d);\n            tempArr.push(getNumsObj(seedSquare, middleSeedValues, modifyNums.transformToR(middleSeedValues,d)));\n        }\n        setGeneratedNums(tempArr);\n    }\n\n    return (\n        <div>\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Algoritmo Cuadrados Medios\n                </h1>\n            </div>\n            <div className='form-group'>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Semilla:</label>\n                        <input id='semilla' type='number' min='100' max='999999' value={seed} onChange={(e)=>setSeed(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs'>\n                        <label for='generar'>Cantidad de Numeros a Generar:</label>\n                        <input id='generar' type='number' value={amount} onChange={(e)=>setAmount(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end inputs'>\n                        <div className='btn btn-primary' onClick={(e)=>generateNums()}>Generar</div>\n                    </div>\n                </div>\n            </div>\n            <div className='row'>\n                <p>D tiene un valor de: {d}</p>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Y</th>\n                            <th scope=\"col\">X</th>\n                            <th scope=\"col\">R</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            generatedNums.map((e)=>{\n                                return (\n                                    <tr scope=\"row\">\n                                        <td>{e.y}</td>\n                                        <td>{e.x}</td>\n                                        <td>{e.r}</td>\n                                    </tr>\n                                )\n                            }\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AlgoritmoCuadradosMedios","import React, {useState, useEffect} from 'react'\nimport modifyNums from '../../services/algorithmFunctions'\n\nconst AlgoritmoMultiplicadorConstante = () =>{\n    let [d, setD] = useState(3);\n    let [seed, setSeed] = useState(100);\n    let [a, setA] = useState(100);\n    let [amount, setAmount] = useState(0);\n    let [generatedNums, setGeneratedNums] = useState([]);\n    let [unvalidA, setUnvalidA] = useState(false);\n    useEffect(()=>{\n        let seedLength = seed.toString().length;\n        if(d!==seedLength && seedLength>3&&seedLength<7){\n            setD(seedLength);\n        }\n    }, [seed, a])\n    const getNumsObj = (y,a,x,r) =>{\n        return {\n            y, \n            a,\n            x,\n            r\n        };\n    };\n\n    const generateNums=()=>{\n        if(a.toString().length!=d){\n            setUnvalidA(true);\n        }else{\n            setUnvalidA(false);\n            let tempArr = [];\n            let seedProduct = a * seed;\n            let middleSeedValues = modifyNums.getMiddleValues(seedProduct, d);\n            tempArr.push(getNumsObj(seedProduct, a, middleSeedValues, modifyNums.transformToR(middleSeedValues, d)));\n            for(let i = 1; i< amount;i++){\n                seedProduct = a * tempArr[i-1].x;\n                middleSeedValues = modifyNums.getMiddleValues(seedProduct, d);\n                tempArr.push(getNumsObj(seedProduct, a, middleSeedValues, modifyNums.transformToR(middleSeedValues, d)));\n            }\n            console.log(tempArr)\n            setGeneratedNums(tempArr);\n        }\n    }\n\n    return (\n        <div>\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Algoritmo Multiplicador Constante\n                </h1>\n            </div>\n            <div className='form-group'>\n                {\n                    unvalidA ? <div class=\"alert alert-danger\" role=\"alert\">\n                        La constante debe tener el mismo valor que la semilla\n                    </div> : ''\n                }\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Semilla X0:</label>\n                        <input id='semilla' type='number' min='100' max='999999' value={seed} onChange={(e)=>setSeed(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Constante:</label>\n                        <input id='semilla' type='number' min='100' max='999999' value={a} onChange={(e)=>setA(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs'>\n                        <label for='generar'>Cantidad de Numeros a Generar:</label>\n                        <input id='generar' type='number' value={amount} onChange={(e)=>setAmount(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end inputs'>\n                        <div className='btn btn-primary' onClick={(e)=>generateNums()}>Generar</div>\n                    </div>\n                </div>\n            </div>\n            <div className='row'>\n                <p>D tiene un valor de: {d}</p>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Y</th>\n                            <th scope=\"col\">A</th>\n                            <th scope=\"col\">X</th>\n                            <th scope=\"col\">R</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            generatedNums.map((e)=>{\n                                return (\n                                    <tr scope=\"row\">\n                                        <td>{e.y}</td>\n                                        <td>{e.a}</td>\n                                        <td>{e.x}</td>\n                                        <td>{e.r}</td>\n                                    </tr>\n                                )\n                            }\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AlgoritmoMultiplicadorConstante","import React, {useState} from 'react'\n\nconst AlgoritmoLineal = () =>{\n    let [d, setD] = useState(0);\n    let [seed, setSeed] = useState(0)\n    let [a, setA] = useState(0);\n    let [c, setC] = useState(0);\n    let [m, setM] = useState(0);\n    let [amount, setAmount] = useState(0);\n    let [generatedNums, setGeneratedNums] = useState([]);\n\n    const getNumsObj = (c,y,a,x,divR,r) =>{\n        return {\n            c,\n            y, \n            a,\n            x,\n            divR,\n            r\n        };\n    };\n\n    const generateNums=()=>{\n            let tempArr = [];\n            let tempY = ((a*seed)+c)%m;\n            tempArr.push(getNumsObj(c, tempY, a, seed, `${tempY}/${m-1}`, (tempY/(m-1)).toFixed(d)));\n            for(let i = 1; i< amount;i++){\n                tempY = (a*tempArr[i-1].y+c)%m;\n                tempArr.push(getNumsObj(c, tempY, a, tempArr[i-1].y, `${tempY}/${m-1}`, (tempY/(m-1)).toFixed(d)));\n            }\n            console.log(tempArr);\n            setGeneratedNums(tempArr);\n    }\n\n    return (\n        <div>\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Algoritmo Lineal\n                </h1>\n            </div>\n            <div className='form-group'>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Cantidad de digitos:</label>\n                        <input id='semilla' type='number' value={d} onChange={(e)=>setD(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de a:</label>\n                        <input id='semilla' type='number' value={a} onChange={(e)=>setA(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de c:</label>\n                        <input id='semilla' type='number' value={c} onChange={(e)=>setC(parseInt(e.target.value))}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de m:</label>\n                        <input id='semilla' type='number' value={m} onChange={(e)=>setM(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de X0:</label>\n                        <input id='semilla' type='number' value={seed} onChange={(e)=>setSeed(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs'>\n                        <label for='generar'>Cantidad de Numeros a Generar:</label>\n                        <input id='generar' type='number' value={amount} onChange={(e)=>setAmount(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end inputs'>\n                        <div className='btn btn-primary' onClick={(e)=>generateNums()}>Generar</div>\n                    </div>\n                </div>\n            </div>\n            <div className='row'>\n                <p>D tiene un valor de: {d}</p>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Xi-1</th>\n                            <th scope=\"col\">Xi</th>\n                            <th scope=\"col\">m</th>\n                            <th scope=\"col\">c</th>\n                            <th scope=\"col\">Process</th>\n                            <th scope=\"col\">ri</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            generatedNums.map((e)=>{\n                                return (\n                                    <tr scope=\"row\">\n                                        <td>{e.x}</td>\n                                        <td>{e.y}</td>\n                                        <td>{e.m}</td>\n                                        <td>{e.c}</td>\n                                        <td>{e.divR}</td>\n                                        <td>{e.r}</td>\n                                    </tr>\n                                )\n                            }\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AlgoritmoLineal","import React, {useState} from 'react'\n\nconst AlgoritmoCongruencialMultiplicativo = () =>{\n    let [d, setD] = useState(0);\n    let [seed, setSeed] = useState(0)\n    let [a, setA] = useState(0);\n    let [m, setM] = useState(0);\n    let [amount, setAmount] = useState(0);\n    let [generatedNums, setGeneratedNums] = useState([]);\n\n    const getNumsObj = (y,a,x,divR,r) =>{\n        return {\n            y, \n            a,\n            x,\n            divR,\n            r\n        };\n    };\n\n    const generateNums=()=>{\n            let tempArr = [];\n            let tempY = ((a*seed))%m;\n            tempArr.push(getNumsObj(tempY, a, seed, `${seed}/${m-1}`, (tempY/(m-1)).toFixed(d)));\n            for(let i = 1; i< amount;i++){\n                tempY = (a*tempArr[i-1].y)%m;\n                tempArr.push(getNumsObj(tempY, a, tempArr[i-1].y, `${tempY}/${m-1}`, (tempY/(m-1)).toFixed(d)));\n            }\n            console.log(tempArr)\n            setGeneratedNums(tempArr);\n    }\n\n    return (\n        <div>\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Algoritmo Algoritmo Congruencial Multiplicativo\n                </h1>\n            </div>\n            <div className='form-group'>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Cantidad de digitos:</label>\n                        <input id='semilla' type='number' value={d} onChange={(e)=>setD(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de a:</label>\n                        <input id='semilla' type='number' value={a} onChange={(e)=>setA(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de m:</label>\n                        <input id='semilla' type='number' value={m} onChange={(e)=>setM(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de X0:</label>\n                        <input id='semilla' type='number' value={seed} onChange={(e)=>setSeed(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs'>\n                        <label for='generar'>Cantidad de Numeros a Generar:</label>\n                        <input id='generar' type='number' value={amount} onChange={(e)=>setAmount(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end inputs'>\n                        <div className='btn btn-primary' onClick={(e)=>generateNums()}>Generar</div>\n                    </div>\n                </div>\n            </div>\n            <div className='row'>\n                <p>D tiene un valor de: {d}</p>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Xi-1</th>\n                            <th scope=\"col\">Xi</th>\n                            <th scope=\"col\">m</th>\n                            <th scope=\"col\">Process</th>\n                            <th scope=\"col\">ri</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            generatedNums.map((e)=>{\n                                return (\n                                    <tr scope=\"row\">\n                                        <td>{e.x}</td>\n                                        <td>{e.y}</td>\n                                        <td>{m}</td>\n                                        <td>{e.divR}</td>\n                                        <td>{e.r}</td>\n                                    </tr>\n                                )\n                            }\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AlgoritmoCongruencialMultiplicativo","import React, {useState, useEffect} from 'react'\n\nconst AlgoritmoCongruencialAditivo = () =>{\n    let [d, setD] = useState(0);\n    let [seeds, setSeeds] = useState([])\n    let [n, setN] = useState(0);\n    let [m, setM] = useState(0);\n    let [currentSeed, setCurrentSeed] = useState(0);\n    let [amount, setAmount] = useState(0);\n    let [generatedNums, setGeneratedNums] = useState([]);\n\n    const getNumsObj = (xi,xi_n,xi_1,divR,r) =>{\n        return {\n            xi,\n            xi_n,\n            xi_1,\n            divR,\n            r\n        };\n    };\n\n    const addValueToArray = () =>{\n        setSeeds([...seeds, currentSeed]);\n        setCurrentSeed(0);\n    }\n    const generateNums=()=>{\n            let tempArr = [];\n            let tempY;\n            let tempSeeds=[...seeds]\n            // tempArr.push(getNumsObj(tempY, a, seed, `${seed}/${m-1}`, (tempY/(m-1)).toFixed(d)));\n            for(let i = 0; i< amount; i++){\n                console.log(`${tempSeeds[i]} ${tempSeeds[i+n-1]} ${n}`)\n                tempY = (tempSeeds[i]+tempSeeds[i+n-1])%m;\n                tempSeeds.push(tempY);\n                tempArr.push(getNumsObj(tempY,tempSeeds[i],tempSeeds[i+n-1], `${tempY}/${m-1}`, (tempY/(m-1)).toFixed(d)));\n                console.log(tempArr);\n                console.log(tempSeeds)\n            }\n            setGeneratedNums(tempArr);\n    }\n\n    return (\n        <div>\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Algoritmo Algoritmo Congruencial Aditivo\n                </h1>\n            </div>\n            <div className='form-group'>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Cantidad de digitos:</label>\n                        <input id='semilla' type='number' value={d} onChange={(e)=>setD(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de n:</label>\n                        <input id='semilla' type='number' value={n} onChange={(e)=>setN(parseInt(e.target.value))}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de m:</label>\n                        <input id='semilla' type='number' value={m} onChange={(e)=>setM(parseInt(e.target.value))}/>\n                    </div>\n                </div>\n                <div className='row number'>\n                    <div className='col-6 d-flex'>\n                        <label for='semilla mr-auto p-2'>Valores de X0 a Xn:</label>\n                        <div className='ml-auto p-2'>\n                            <input id='semilla' type='number' value={currentSeed} onChange={(e)=>setCurrentSeed(parseInt(e.target.value))}/>\n                            <div className='btn btn-primary p-2' onClick={(e)=>addValueToArray()}>Agregar</div>\n                        </div>\n                    </div>\n                    <div className='col-6 d-flex flex-wrap inputs' >\n                        {seeds.map((seed, index)=>{\n                            return(\n                                <p className='number-list'>{seed}</p>\n                            )\n                        })}\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs'>\n                        <label for='generar'>Cantidad de Numeros a Generar:</label>\n                        <input id='generar' type='number' value={amount} onChange={(e)=>setAmount(parseInt(e.target.value))}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end inputs'>\n                        <div className='btn btn-primary' onClick={(e)=>generateNums()}>Generar</div>\n                    </div>\n                </div>\n            </div>\n            <div className='row'>\n                <p>D tiene un valor de: {d}</p>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Xi</th>\n                            <th scope=\"col\">Xi-1</th>\n                            <th scope=\"col\">Xi-n</th>\n                            <th scope=\"col\">Process</th>\n                            <th scope=\"col\">ri</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            generatedNums.map((e)=>{\n                                return (\n                                    <tr scope=\"row\">\n                                        <td>{e.xi}</td>\n                                        <td>{e.xi_1}</td>\n                                        <td>{e.xi_n}</td>\n                                        <td>{e.divR}</td>\n                                        <td>{e.r}</td>\n                                    </tr>\n                                )\n                            }\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AlgoritmoCongruencialAditivo","import React, {useState} from 'react'\n\nconst AlgoritmoCongruencialCuadratico = () =>{\n    let [d, setD] = useState(0);\n    let [seed, setSeed] = useState(0)\n    let [a, setA] = useState(0);\n    let [b, setB] = useState(0);\n    let [c, setC] = useState(0);\n    let [m, setM] = useState(0);\n    let [amount, setAmount] = useState(0);\n    let [generatedNums, setGeneratedNums] = useState([]);\n\n    const getNumsObj = (b, c,a,x2,x1,divR,r) =>{\n        return {\n            b,\n            c,\n            x1, \n            a,\n            x2,\n            divR,\n            r\n        };\n    };\n\n    const generateNums=()=>{\n            let tempArr = [];\n            let tempY = ((a*Math.pow(seed,2)+b*seed)+c)%m;\n            tempArr.push(getNumsObj(b, c, a,tempY, tempY, `${tempY}/${m-1}`, (tempY/(m-1)).toFixed(d)));\n            for(let i = 1; i< amount;i++){\n                tempY = ((a*Math.pow(tempArr[i-1].x2,2)+b*tempArr[i-1].x2)+c)%m;\n                tempArr.push(getNumsObj(b,c, a, tempY, tempY, `${tempY}/${m-1}`, (tempY/(m-1)).toFixed(d)));\n            }\n            console.log(tempArr)\n            setGeneratedNums(tempArr);\n    }\n\n    return (\n        <div>\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Algoritmo Congruencial Cuadratico\n                </h1>\n            </div>\n            <div className='form-group'>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Cantidad de digitos:</label>\n                        <input id='semilla' type='number' value={d} onChange={(e)=>setD(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de a:</label>\n                        <input id='semilla' type='number' value={a} onChange={(e)=>setA(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de b:</label>\n                        <input id='semilla' type='number' value={b} onChange={(e)=>setB(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de c:</label>\n                        <input id='semilla' type='number' value={c} onChange={(e)=>setC(parseInt(e.target.value))}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de m:</label>\n                        <input id='semilla' type='number' value={m} onChange={(e)=>setM(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de X0:</label>\n                        <input id='semilla' type='number' value={seed} onChange={(e)=>setSeed(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs'>\n                        <label for='generar'>Cantidad de Numeros a Generar:</label>\n                        <input id='generar' type='number' value={amount} onChange={(e)=>setAmount(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end inputs'>\n                        <div className='btn btn-primary' onClick={(e)=>generateNums()}>Generar</div>\n                    </div>\n                </div>\n            </div>\n            <div className='row'>\n                <p>D tiene un valor de: {d}</p>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Xi</th>\n                            <th scope=\"col\">m</th>\n                            <th scope=\"col\">a</th>\n                            <th scope=\"col\">b</th>\n                            <th scope=\"col\">c</th>\n                            <th scope=\"col\">Process</th>\n                            <th scope=\"col\">ri</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            generatedNums.map((e)=>{\n                                return (\n                                    <tr scope=\"row\">\n                                        <td>{e.x1}</td>\n                                        <td>{m}</td>\n                                        <td>{e.a}</td>\n                                        <td>{e.b}</td>\n                                        <td>{e.c}</td>\n                                        <td>{e.divR}</td>\n                                        <td>{e.r}</td>\n                                    </tr>\n                                )\n                            }\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AlgoritmoCongruencialCuadratico","import React, {useState, useEffect} from 'react'\nimport modifyNums from '../../services/algorithmFunctions'\n\nconst AlgoritmoProductosMedios = () =>{\n    let [d, setD] = useState(3);\n    let [seed, setSeed] = useState(100);\n    let [seed2, setSeed2] = useState(100);\n    let [amount, setAmount] = useState(0);\n    let [generatedNums, setGeneratedNums] = useState([]);\n    useEffect(()=>{\n        let seedLength = seed.toString().length;\n        let seed2Length = seed2.toString().length\n        if(d!==seedLength && seedLength>3&&seedLength<7 &&seed2Length>3&&seed2Length<7){\n            setD(seedLength > seed2Length ? seedLength : seed2Length);\n        }\n    }, [seed, seed2])\n    const getNumsObj = (y,x1,x2,r) =>{\n        return {\n            y, \n            x1,\n            x2,\n            r\n        };\n    };\n\n    const generateNums=()=>{\n        let tempArr = [];\n        let seedProduct = seed * seed2;\n        let middleSeedValues = modifyNums.getMiddleValues(seedProduct, d);\n        tempArr.push(getNumsObj(seedProduct, seed2, middleSeedValues, modifyNums.transformToR(middleSeedValues, d)));\n        for(let i = 1; i< amount;i++){\n            seedProduct = tempArr[i-1].x1 * tempArr[i-1].x2;\n            middleSeedValues = modifyNums.getMiddleValues(seedProduct, d);\n            tempArr.push(getNumsObj(seedProduct, tempArr[i-1].x2, middleSeedValues, modifyNums.transformToR(middleSeedValues, d)));\n        }\n        console.log(tempArr)\n        setGeneratedNums(tempArr);\n    }\n\n    return (\n        <div>\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Algoritmo Productos Medios\n                </h1>\n            </div>\n            <div className='form-group'>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Semilla X0:</label>\n                        <input id='semilla' type='number' min='100' max='999999' value={seed} onChange={(e)=>setSeed(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Semilla X1:</label>\n                        <input id='semilla' type='number' min='100' max='999999' value={seed2} onChange={(e)=>setSeed2(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs'>\n                        <label for='generar'>Cantidad de Numeros a Generar:</label>\n                        <input id='generar' type='number' value={amount} onChange={(e)=>setAmount(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end inputs'>\n                        <div className='btn btn-primary' onClick={(e)=>generateNums()}>Generar</div>\n                    </div>\n                </div>\n            </div>\n            <div className='row'>\n                <p>D tiene un valor de: {d}</p>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Y</th>\n                            <th scope=\"col\">Xi-1</th>\n                            <th scope=\"col\">Xi</th>\n                            <th scope=\"col\">R</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            generatedNums.map((e)=>{\n                                return (\n                                    <tr scope=\"row\">\n                                        <td>{e.y}</td>\n                                        <td>{e.x1}</td>\n                                        <td>{e.x2}</td>\n                                        <td>{e.r}</td>\n                                    </tr>\n                                )\n                            }\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default AlgoritmoProductosMedios","import React, {useState, useEffect} from 'react'\nimport jStat from 'jstat'\nimport {standardNormalTable} from 'simple-statistics'\nimport chi from 'chi-squared'\nimport chiSquareInverse from 'inv-chisquare-cdf'\n\nconst PruebaVarianza = () =>{\n    let [c, setC] = useState('')\n    let [currentNum, setCurrentNum] = useState('');\n    let [numbersCSVString, setNumbersCSVString] = useState('');\n    let [numbers, setNumbers] = useState([]);\n    let [acepta, setAcepta] = useState(false);\n    let [testRun, setTestRun] = useState(false);\n    let [media, setMedia] = useState(0);\n    let [alpha, setAlpha] = useState(0.05);\n    let [limitI, setLimitI] = useState(0);\n    let [limitS, setLimitS] = useState(0);\n    let [variance, setVariance] = useState(0);\n\n    useEffect(()=>{\n        let degreeFreed = numbers.length? numbers.length -1 : 1;\n        let temp = (12*(numbers.length-1));\n        setLimitI(chiSquareInverse.invChiSquareCDF(alpha/2,degreeFreed)/temp);\n        setLimitS(chiSquareInverse.invChiSquareCDF((1-(alpha/2)),degreeFreed)/temp);\n    },[alpha, numbers])\n\n    useEffect(()=>{\n        let temp = numbers.length>0 ? numbers.reduce((prev,curr)=>{\n            return (Number(prev) + Math.pow(Number(curr)-media,2))\n        }):'';\n        setVariance(temp/(numbers.length-1));\n    }, [media])\n\n    useEffect(()=>{\n        if(limitI< variance&&limitS>variance){\n            setAcepta(true);\n        }\n        if(variance>0)\n            setTestRun(true);\n    }, [variance])\n\n    const addCSVValues = () => {\n        if(parseFloat(c)){\n            let nums = numbersCSVString.split(',').map((e)=>parseFloat(e));\n            setAlpha(parseFloat(c))\n            setNumbers([...nums])\n        }\n    }\n    const addValueToArray = () =>{\n        setNumbers([...numbers, currentNum]);\n        setCurrentNum('');\n    }\n\n    const calculateMed = () =>{\n        if(numbers.length>0){\n            let sum = numbers.reduce((prev,curr)=>{\n                return (Number(prev)+Number(curr)).toFixed(4)}\n            )\n            setMedia(sum/numbers.length)\n        }\n    }\n\n    return (\n        <div>\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Prueba de Varianza\n                </h1>\n            </div>\n            <div className='form-group'>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de Alpha:</label>\n                        <input id='semilla' type='text' value={c} onChange={(e)=>setC(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row '>\n                    <div className='col-6 d-flex flex-column'>\n                        <div className='d-flex flex-column'>\n                            <label for='numero'>Ingresar digitos de uno en uno:</label>\n                            <div className='d-flex'>\n                                <input id='numero' type='text' value={currentNum} onChange={(e)=>setCurrentNum(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addValueToArray()}>Agregar</div>\n                            </div>\n                        </div>\n                        <div className='d-flex flex-column'>\n                            <label for='csv'>Ingresar digitos separados por comas (Estilo de un csv):</label>\n                            <div className='d-flex'>\n                            <textarea id='csv' className='form-control' value={numbersCSVString} onChange={(e)=>setNumbersCSVString(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addCSVValues()}>Agregar</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col-6 d-flex flex-wrap inputs' >\n                        {numbers.map((num)=>{\n                            return <p className='number-list'>{num}</p>\n                        })}\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end inputs'>\n                        <div className='btn btn-primary' onClick={(e)=>calculateMed()}>Correr Prueba</div>\n                    </div>\n                </div>\n            </div>\n            <div className='container'>\n                {\n                    testRun ? \n                    <div>\n                        <div className='container'> \n                            <div className='row'>\n                                <div className='col-12'>\n                                    <h7>H0</h7>\n                                    <p>Dada la varianza = {variance.toFixed(4)}, se encuentra dentro de los límites y no se puede rechazar el \n                                    planteamiento que el conjunto de números tiene una varianza de 1/12 (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                                <div className='col-12'>\n                                    <h7>H1</h7>\n                                    <p>Dada la varianza = {variance.toFixed(4)}, no se encuentra dentro de los límites se puede rechazar el \n                                    planteamiento que el conjunto de números tiene una varianza de 1/12 (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                            </div>\n                        </div>\n                        {acepta ?\n                        <div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">No se puede negar la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Dada la varianza = {variance.toFixed(4)}, se encuentra dentro de los límites y no se puede rechazar el \n                                planteamiento que el conjunto de números tiene una varianza de 1/12 (Con un nivel de confianza {(1-c)*100}%) </h5>\n                                <div className=\"row\">\n                                    <div className=\"col-6 d-flex\">\n                                        <p className=\"card-text\">LI= {limitI.toFixed(4)}</p>\n                                        <p className=\"card-text ml-auto p-2\">LS= {limitS.toFixed(4)}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>:<div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">Se niega la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Dada la varianza = {variance.toFixed(4)}, no se encuentra dentro de los límites se puede rechazar el \n                                planteamiento que el conjunto de números tiene una varianza de 1/12 (Con un nivel de confianza {(1-c)*100}%) </h5>\n                                <div className=\"row\">\n                                    <div className=\"col-6 d-flex\">\n                                        <p className=\"card-text\">LI= {limitI.toFixed(4)}</p>\n                                        <p className=\"card-text ml-auto p-2\">LS= {limitS.toFixed(4)}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                    :\n                    <div className='container'> \n                        <div className='row'>\n                            <div className='col-12'>\n                                <h7>H0</h7>\n                                <p>Dada la varianza = nuestra varianza, se encuentra dentro de los límites y no se puede rechazar el \n                                planteamiento que el conjunto de números tiene una varianza de 1/12 (Con un nivel de confianza {(1-c)*100}%)</p>\n                            </div>\n                            <div className='col-12'>\n                                <h7>H1</h7>\n                                <p>Dada la varianza = nuestra varianza, no se encuentra dentro de los límites se puede rechazar el \n                                planteamiento que el conjunto de números tiene una varianza de 1/12 (Con un nivel de confianza {(1-c)*100}%)</p>\n                            </div>\n                        </div>\n                    </div>\n                } \n            </div>\n        </div>\n    )\n}\n\nexport default PruebaVarianza","import React, {useEffect,useState} from 'react'\nimport chiSquareInverse from 'inv-chisquare-cdf'\n\nconst PruebaUnidormidadChiCuadrada = () =>{\n    let [c, setC] = useState('');\n    let [n, setN] = useState(0);\n    let [m, setM] = useState(0);\n    let [currentNum, setCurrentNum] = useState('');\n    let [numbersCSVString, setNumbersCSVString] = useState('');\n    let [numbers, setNumbers] = useState([]);\n    let [acepta, setAcepta] = useState(false);\n    let [testRun, setTestRun] = useState(false);\n    let [chiSum, setChiSum] = useState(0);\n    let [alpha, setAlpha] = useState(0.05);\n    let [chiValue, setChiValue] = useState(0);\n    let [testTable, setTestTable] = useState([]);\n\n    const getObject = (interval, oi, ei, eioiei) => {\n        return {\n            interval,\n            oi,\n            ei,\n            eioiei\n        }\n    }\n\n    useEffect(()=>{\n        if(chiValue>chiSum){\n            setAcepta(true)\n        }\n        if(chiValue>0)\n            setTestRun(true);\n    }, [chiSum])\n\n    useEffect(()=>{\n        let degreeFreed = m > 2 ? m -1 : 1;\n        setChiValue(chiSquareInverse.invChiSquareCDF(1-alpha/2,degreeFreed));\n    },[alpha, m])\n\n    const addCSVValues = () => {\n        if(parseFloat(c)){\n            let nums = numbersCSVString.split(',').map((e)=>parseFloat(e));\n            setAlpha(parseFloat(c));\n            setNumbers([...nums]);\n            setN(nums.length);\n            setM(Math.pow(nums.length,.5));\n        }\n    }\n    const addValueToArray = () =>{\n        setNumbers([...numbers, currentNum]);\n        setCurrentNum('');\n    }\n\n    const calculateUni = () =>{\n        if(numbers.length>0){\n            let ei = n/m;\n            let temp = [...testTable]\n            let tempEi = [];\n            for(let i = 0; i < m; i++){\n                let oi = numbers.filter((e)=>(e>(.1*i)&&e<(.1*(i+1)))).length\n                let eioisquaredei = Math.pow(ei-oi,2)/ei\n                temp.push(getObject(`[${.01*i}-${.01*(i+1)}]`, oi, ei, eioisquaredei));\n                tempEi.push(eioisquaredei);\n            }\n            setTestTable(temp)\n            setChiSum(tempEi.reduce((prev, curr)=>prev+curr));\n        }\n    }\n\n    return (\n        <div>\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Prueba de Uniformidad Chi-Cuadrada\n                </h1>\n            </div>\n            <div className='form-group'>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de Alpha:</label>\n                        <input id='semilla' type='text' value={c} onChange={(e)=>setC(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row '>\n                    <div className='col-6 d-flex flex-column'>\n                        <div className='d-flex flex-column'>\n                            <label for='numero'>Ingresar digitos de uno en uno:</label>\n                            <div className='d-flex'>\n                                <input id='numero' type='text' value={currentNum} onChange={(e)=>setCurrentNum(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addValueToArray()}>Agregar</div>\n                            </div>\n                        </div>\n                        <div className='d-flex flex-column'>\n                            <label for='csv'>Ingresar digitos separados por comas (Estilo de un csv):</label>\n                            <div className='d-flex'>\n                                <textarea id='csv' className='form-control' value={numbersCSVString} onChange={(e)=>setNumbersCSVString(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addCSVValues()}>Agregar</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col-6 d-flex flex-wrap inputs' >\n                        {numbers.map((num)=>{\n                            return <p className='number-list'>{num}</p>\n                        })}\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end inputs'>\n                        <div className='btn btn-primary' onClick={(e)=>calculateUni()}>Correr Prueba</div>\n                    </div>\n                </div>\n            </div>\n            <div className='container'>\n                {\n                    testRun ? \n                    <div>\n                        <div className='container'> \n                            <div className='row'>\n                                <div className='col-12'>\n                                    <h7>H0</h7>\n                                    <p>Como el estadístico calculado {chiSum.toFixed(4)}, es menor al estadístico de las tablas {chiValue.toFixed(4)}\n                                no se puede rechazar que los números sigan una distribución uniforme continua (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                                <div className='col-12'>\n                                    <h7>H1</h7>\n                                    <p>Como el estadístico calculado {chiSum.toFixed(4)}, es mayor al estadístico de las tablas {chiValue.toFixed(4)}\n                                se puede rechazar que los números sigan una distribución uniforme continua (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                            </div>\n                        </div>\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        Intervalo\n                                    </th>\n                                    <th>\n                                        Oi\n                                    </th>\n                                    <th>\n                                        Ei = n/m\n                                    </th>\n                                    <th>\n                                        (Ei-Oi)^2/Ei\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    testTable.map((e)=>{{\n                                        return(\n                                            <tr>\n                                                <td>{e.interval}</td>\n                                                <td>{e.oi}</td>\n                                                <td>{e.ei.toFixed(4)}</td>\n                                                <td>{e.eioiei.toFixed(4)}</td>\n                                            </tr>\n                                        )\n                                    }})\n                                }\n                            </tbody>\n                        </table>\n                        {acepta ?\n                        <div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">No se puede negar la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Como el estadístico calculado {chiSum.toFixed(4)}, es menor al estadístico de las tablas {chiValue.toFixed(4)}\n                                no se puede rechazar que los números sigan una distribución uniforme continua (Con un nivel de confianza {(1-c)*100}%) </h5>\n                                <div className=\"row\">\n                                    <div className=\"col-6 d-flex\">\n                                        <p className=\"card-text\">Valor de las tablas: {chiValue.toFixed(4)}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>:<div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">Se niega la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Como el estadístico calculado {chiSum.toFixed(4)}, es mayor al estadístico de las tablas {chiValue.toFixed(4)}\n                                se puede rechazar que los números sigan una distribución uniforme continua (Con un nivel de confianza {(1-c)*100}%) </h5>\n                                <div className=\"row\">\n                                    <div className=\"col-6 d-flex\">\n                                        <p className=\"card-text\">Valor de las tablas: {chiValue.toFixed(4)}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                    :\n                    <div className='container'> \n                            <div className='row'>\n                                <div className='col-12'>\n                                    <h7>H0</h7>\n                                    <p>Como el estadístico calculado (X0^2), es menor al estadístico de las tablas (valor de la tabla) \n                                no se puede rechazar que los números sigan una distribución uniforme continua (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                                <div className='col-12'>\n                                    <h7>H1</h7>\n                                    <p>Como el estadístico calculado  (X0^2), es mayor al estadístico de las tablas (valor de la tabla)\n                                se puede rechazar que los números sigan una distribución uniforme continua (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                            </div>\n                        </div>\n                } \n            </div>\n        </div>\n    )\n}\n\nexport default PruebaUnidormidadChiCuadrada","import React, { useState, useEffect } from 'react'\nimport chiSquareInverse from \"inv-chisquare-cdf\";\n\nconst PruebaHuecos = () => {\n    let [c, setC] = useState(0);\n    let [numbersCSVString, setNumbersCSVString] = useState('');\n    let [currentNum, setCurrentNum] = useState('');\n    let [alpha, setAlpha] = useState(0);\n    let [acepta, setAcepta] = useState(false);\n    let [testRun, setTestRun] = useState(false);\n    let [numbers, setNumbers] = useState([]);\n    let [minInter, setMinInter] = useState(0);\n    let [maxInter, setMaxInter] = useState(1);\n    let [table, setTable] = useState([]);\n    let [H, setH] = useState(0);\n    let [estTotal, setEstTotal] = useState(0)\n    let [display, setDisplay] = useState(false);\n    let [X2, setx2]=useState(0)\n\n    useEffect(()=>{\n        if(X2>estTotal){\n            setAcepta(true)\n        }\n        if(X2>0&& estTotal>0){\n            setTestRun(true)\n        }\n    }, [X2, estTotal])\n    useEffect(()=>{\n        if(alpha>0){\n            setx2(chiSquareInverse.invChiSquareCDF(1-alpha/2, 4));\n        }\n    }, [alpha])\n\n    const calculate = () => {\n        let list = [...numbers]\n        let normList = normalizeList(list)\n        let table = fillTable(normList)\n        setTable(table)\n        setDisplay(true)\n    }\n\n    const addValueToArray = () =>{\n        let temp = [...numbers, currentNum];\n        setNumbers(temp);\n        setCurrentNum('');\n    }\n\n    const addCSVValues = () => {\n        if(parseFloat(c)){\n            let nums = numbersCSVString.split(',').map((e)=>parseFloat(e));\n            setAlpha(parseFloat(c));\n            setNumbers([...nums]);\n        }\n    }\n\n    // agrega 1 si el numero esta dentro de los intervalos, 0 si no\n    const normalizeList = (list) => {\n        let newList = []\n        list.forEach((x) => {\n            if (minInter <= x && x <= maxInter) {\n                newList.push(1)\n            } else {\n                newList.push(0)\n            }\n        })\n        return newList\n    }\n\n    // llama a todos los metodos necesarios para llenar la tabla\n    const fillTable = (list) => {\n        let { firstTable, H } = getOi(list)\n        setH(H)\n        let table = getEi(firstTable, H)\n        return getEstadistico(table)\n    }\n\n    // cuenta los hoyos con un tamaño dado\n    const getOi = (list) => {\n        let firstOne = list.indexOf(1)\n        let H = 0\n        let table = [\n            { i: 0, oi: 0, ei: 0, f: 0 },\n            { i: 1, oi: 0, ei: 0, f: 0 },\n            { i: 2, oi: 0, ei: 0, f: 0 },\n            { i: 3, oi: 0, ei: 0, f: 0 },\n            { i: 4, oi: 0, ei: 0, f: 0 },\n            { i: 5, oi: 0, ei: 0, f: 0 }\n        ]\n        for (let h = 0; h <= 5; h++) {\n            let holes = 0\n            for (let i = firstOne; i < list.length - 1; i++) {\n                for (let k = i + 1; k < list.length; k++) {\n                    if (list[k] === 1) {\n                        if (list[i] === list[k]) {\n                            if (h === holes) {\n                                table[h].oi += 1\n                                H++\n                            } else if (h === 5 && holes >= 5) {\n                                table[h].oi += 1\n                                H++\n                            }\n                            i = k\n                        }\n                        holes = 0\n                    } else {\n                        holes++\n                    }\n\n                }\n            }\n        }\n        return { firstTable: table, H: H }\n    }\n\n    // set values for the EI column\n    const getEi = (table, H) => {\n        table.forEach((obj) => {\n            obj.ei = H * (maxInter - minInter) * Math.pow((1 - (maxInter - minInter)), obj.i)\n        })\n        return table\n    }\n\n    // set values for the Last column\n    const getEstadistico = (table) => {\n        let total = 0\n        table.forEach((obj) => {\n            obj.f = Math.pow((obj.ei - obj.oi), 2) / obj.ei\n            total += obj.f\n        })\n        setEstTotal(total)\n        return table\n    }\n\n    return (\n        <div>\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Prueba de Huecos\n                </h1>\n            </div>\n            <div className='form-group'>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de Alpha:</label>\n                        <input id='semilla' type='text' value={c} onChange={(e)=>setC(e.target.value)}/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <p>Intervalos de prueba: </p>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-6 justify-content-end inputs\">\n                        <label htmlFor='intervalo0'>Intervalo 0:</label>\n                        <input id='intervalo0' type='text' min='0' max='1' onChange={(e) => setMinInter(e.target.value * 1)} />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-6 justify-content-end inputs\">\n                        <label htmlFor='interval1'>Intervalo 1:</label>\n                        <input id='intervalo1' type='text' min='0' max='1' onChange={(e) => setMaxInter(e.target.value * 1)} />\n                    </div>\n                </div>\n                <div className='row '>\n                    <div className='col-6 d-flex flex-column'>\n                        <div className='d-flex flex-column'>\n                            <label for='numero'>Ingresar digitos de uno en uno:</label>\n                            <div className='d-flex'>\n                                <input id='numero' type='text' value={currentNum} onChange={(e)=>setCurrentNum(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addValueToArray()}>Agregar</div>\n                            </div>\n                        </div>\n                        <div className='d-flex flex-column'>\n                            <label for='csv'>Ingresar digitos separados por comas (Estilo de un csv):</label>\n                            <div className='d-flex'>\n                                <textarea id='csv' className='form-control' value={numbersCSVString} onChange={(e)=>setNumbersCSVString(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addCSVValues()}>Agregar</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col-6 d-flex flex-wrap inputs' >\n                        {numbers.map((num)=>{\n                            return <p className='number-list'>{num}</p>\n                        })}\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end inputs'>\n                        <div className='btn btn-primary' onClick={(e)=>calculate()}>Correr Prueba</div>\n                    </div>\n                </div>\n            </div>\n            <div className='container'>\n                {\n                    testRun ? \n                    <div>\n                        <div className='row'>\n                            <div className=''> \n                                <div className='row'>\n                                    <div className='col-12'>\n                                        <h7>H0</h7>\n                                        <p> El valor obtenido de X0^2 {estTotal.toFixed(4)} es menor al estadístico de tabla = {X2.toFixed(4)}, entonces no se puede rechazar \n                                        que los números del conjunto sean independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                                    </div>\n                                    <div className='col-12'>\n                                        <h7>H1</h7>\n                                        <p>El valor obtenido de X0^2 {estTotal.toFixed(4)} es mayor al estadístico de tabla = {X2.toFixed(4)}, entonces \n                                        rechazamos que los números del conjunto sean independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                                    </div>\n                                </div>\n                            </div>  \n                        </div>\n                        <table className='table'>\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Tamaño Hueco</th>\n                                    <th scope=\"col\">Oi</th>\n                                    <th scope=\"col\">Ei</th>\n                                    <th scope=\"col\">Estadistico</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    table.map((e) => {\n                                        return (\n                                            <tr scope=\"row\" key={e.i}>\n                                                <td>{e.i}</td>\n                                                <td>{e.oi}</td>\n                                                <td>{e.ei.toFixed(3)}</td>\n                                                <td>{e.f.toFixed(3)}</td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                                <tr scope=\"row\">\n                                    <td>TOTAL</td>\n                                    <td>H={H}</td>\n                                    <td>H={H}</td>\n                                    <td>{estTotal.toFixed(3)}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        {acepta ?\n                        <div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">No se puede negar la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">El valor obtenido de X0^2 {estTotal.toFixed(4)} es menor al estadístico de tabla = {X2.toFixed(4)}, entonces no se puede rechazar \n                                        que los números del conjunto sean independientes (Con un nivel de confianza {(1-c)*100}%) </h5>\n                                <div className=\"row\">\n                                    <div className=\"col-6 d-flex\">\n                                        <p className=\"card-text\">Valor de las tablas: {X2.toFixed(4)}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>:<div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">Se niega la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">El valor obtenido de X0^2 {estTotal.toFixed(4)} es mayor al estadístico de tabla = {X2.toFixed(4)}, entonces \n                                        rechazamos que los números del conjunto sean independientes (Con un nivel de confianza {(1-c)*100}%)</h5>\n                                <div className=\"row\">\n                                    <div className=\"col-6 d-flex\">\n                                        <p className=\"card-text\">Valor de las tablas: {X2.toFixed(4)}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        }\n                    </div> :\n                    <div className='row'>\n                        <div className=''> \n                            <div className='row'>\n                                <div className='col-12'>\n                                    <h7>H0</h7>\n                                    <p> El valor obtenido de X0^2 (valor de X0^2 obtenido) es menor al estadístico de tabla = (valor de X^2 de la tabla), entonces no se puede rechazar \n                                    que los números del conjunto sean independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                                <div className='col-12'>\n                                    <h7>H1</h7>\n                                    <p>El valor obtenido de X0^2 (valor de X0^2 obtenido) es mayor al estadístico de tabla = (valor de X^2 de la tabla), entonces \n                                    rechazamos que los números del conjunto sean independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                            </div>\n                        </div>  \n                    </div>\n                }\n            </div>\n        </div>\n  );\n};\n\nexport default PruebaHuecos\n","import React, {useState, useEffect} from 'react'\nimport {standardNormalTable} from 'simple-statistics'\n\nconst PruebaCorrArrAbMed = () =>{\n    let [c, setC] = useState('')\n    let [alpha, setAlpha] = useState(0);\n    let [acepta, setAcepta] = useState(false);\n    let [testRun, setTestRun] = useState(false);\n    let [currentNum, setCurrentNum] = useState('');\n    let [numbersCSVString, setNumbersCSVString] = useState('');\n    let [numbers, setNumbers] = useState([]);\n    let [N, setN] = useState(0);\n    let [C0, setC0] = useState(0);\n    let [N1, setN1] = useState(0);\n    let [N0, setN0] = useState(0);\n    let [MC0, setMC0] = useState(0);\n    let [VariazaC0, setVariazaC0] = useState(0);\n    let [Z0, setZ0] = useState(0);\n\n    useEffect(()=>{\n        if(Z0<(alpha*.01) && Z0 > -(alpha*.01)){\n            setAcepta(true);\n        }\n        if(alpha>0 &&Z0>0){\n            setTestRun(true);\n        }\n    }, [alpha,Z0])\n    const addCSVValues = () => {\n        if(parseFloat(c)){\n            let nums = numbersCSVString.split(',').map((e)=>parseFloat(e));\n            setAlpha(parseFloat(c));\n            setNumbers([...nums]);\n            setN(nums.length);\n        }\n    }\n\n    const addValueToArray = () =>{\n        setNumbers([...numbers, currentNum]);\n        setCurrentNum('');\n    }\n\n    const prueba = () => {\n        let tempArr = [...numbers]\n        let n = tempArr.length\n        setN(n)\n        let media = 0.5;\n        let countSwitch = 0;\n        let swithflag = 0;\n\n        let count1 = tempArr.reduce((a, b) => {\n            let temp = parseFloat(b) > media ? 1 : 0\n            if (temp != swithflag) {\n                countSwitch++;\n                swithflag = !swithflag;\n            }\n            return parseInt(a) + temp;\n        }, 0)\n        let count0 = n - count1\n\n        setC0(countSwitch)\n        setN1(count1)\n        setN0(count0);\n        let mc0 = ((2 * count1 * count0) / n) + (1 / 2);\n        setMC0(mc0);\n\n        let variazaC0 = ((2 * count0 * count1) * (2 * count0 * count1 - n)) / ((n * n) * (n - 1))\n        setVariazaC0(variazaC0)\n        standardNormalTable.forEach((val, index)=>{\n            if(val===1-(parseFloat(c)/2))\n                setAlpha(index)\n        });\n        let z0 = Math.abs((countSwitch - mc0) / Math.sqrt(variazaC0))\n        setZ0(z0)\n    }\n\n    return (\n        <div>\n            <div className='row'>\n                <h1>\n                    Prueba Independencia Corridas Arriba y Abajo Media\n                </h1>\n            </div>\n            <div className='form-group'>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de Alpha:</label>\n                        <input id='semilla' type='text' value={c} onChange={(e)=>setC(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row '>\n                    <div className='col-6 d-flex flex-column'>\n                        <div className='d-flex flex-column'>\n                            <label for='numero'>Ingresar digitos de uno en uno:</label>\n                            <div className='d-flex'>\n                                <input id='numero' type='text' value={currentNum} onChange={(e)=>setCurrentNum(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addValueToArray()}>Agregar</div>\n                            </div>\n                        </div>\n                        <div className='d-flex flex-column'>\n                            <label for='csv'>Ingresar digitos separados por comas (Estilo de un csv):</label>\n                            <div className='d-flex'>\n                                <textarea id='csv' className='form-control' value={numbersCSVString} onChange={(e)=>setNumbersCSVString(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addCSVValues()}>Agregar</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col-6 d-flex flex-wrap inputs' >\n                        {numbers.map((num)=>{\n                            return <p className='number-list'>{num}</p>\n                        })}\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end'>\n                        <div className='btn btn-primary' onClick={(e) => prueba()}>Correr Prueba</div>\n                    </div>\n                </div>\n            </div>\n            <div className='container'>\n                {\n                    testRun ? \n                    <div>\n                        <div className='row'>\n                            <div className=''> \n                                <div className='row'>\n                                    <div className='col-12'>\n                                        <h7>H0</h7>\n                                        <p>Como el valor Z0 = {Z0.toFixed(4)} cae dentro de nuestro intervalo (-{alpha*.01}, {alpha*.01}) no \n                                        podemos rechazar que los números sean independientes (Con una confianza de {(1-c)*100}%)</p>\n                                    </div>\n                                    <div className='col-12'>\n                                        <h7>H1</h7>\n                                        <p>Como el valor Z0 = {Z0.toFixed(4)} no cae dentro de nuestro intervalo (-{alpha*.01}, {alpha*.01})  \n                                        podemos rechazar que los números sean independientes (Con una confianza de {(1-c)*100}%)</p>\n                                    </div>\n                                </div>\n                            </div>  \n                        </div>\n                        <div className=\"row d-flex border-bottom\">\n                            <div className=\"col \">\n                                N:\n                            </div>\n                            <div className=\"col\">\n                                {N}\n                            </div>\n                        </div>\n                        <div className=\"row d-flex border-bottom\">\n                                <div className='col-6'>\n                                    C0:\n                                </div>\n                                <div className='col-6'>\n                                    {C0}\n                                </div>\n                        </div>\n                        <div className=\"row d-flex border-bottom\">\n                                <div className='col-6'>\n                                    N1:\n                                </div>\n                                <div className='col-6'>\n                                    {N1}\n                                </div>\n                        </div>\n                        <div className=\"row d-flex border-bottom\">\n                                <div className='col-6'>\n                                    N0:\n                                </div>\n                                <div className='col-6'>\n                                    {N0}\n                                </div>\n                        </div>\n                        <div className=\"row d-flex border-bottom\">\n                                <div className='col-6'>\n                                    MC0:\n                                </div>\n                                <div className='col-6'>\n                                    {MC0.toFixed(4)}\n                                </div>\n                        </div>\n                        <div className=\"row d-flex border-bottom\">\n                                <div className='col-6'>\n                                    VariazaC0:\n                                </div>\n                                <div className='col-6'>\n                                    {VariazaC0.toFixed(4)}\n                                </div>\n                        </div>\n                        <div className=\"row d-flex border-bottom\">\n                                <div className='col-6'>\n                                    Z0:\n                                </div>\n                                <div className='col-6'>\n                                    {Z0.toFixed(4)}\n                                </div>\n                        </div>\n                        {acepta ?\n                        <div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">No se puede negar la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Como el valor Zo = {Z0.toFixed(4)} cae dentro de nuestro intervalo (-{alpha*.01}, {alpha*.01}) no \n                                podemos rechazar que los números sean independientes (Con una confianza de {(1-c)*100}%) </h5>\n                        \n                            </div>\n                        </div>:<div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">Se niega la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Como el valor Zo = {Z0.toFixed(4)} no cae dentro de nuestro intervalo (-{alpha*.01}, {alpha*.01})  \n                                podemos rechazar que los números sean independientes (Con una confianza de {(1-c)*100}%)</h5>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                    :\n                    <div className='row'>\n                        <div className=''> \n                            <div className='row'>\n                                <div className='col-12'>\n                                    <h7>H0</h7>\n                                    <p>Como el valor Z0 = (valor de Z0 obtenido) cae dentro de nuestro intervalo ((-valor de tabla obtenido), (valor de tabla obtenido)) no \n                                    podemos rechazar que los números sean independientes (Con una confianza de {(1-c)*100}%)</p>\n                                </div>\n                                <div className='col-12'>\n                                    <h7>H1</h7>\n                                    <p>Como el valor Z0 = (valor de Z0 obtenido) no cae dentro de nuestro intervalo ((-valor de tabla obtenido), (valor de tabla obtenido))\n                                    podemos rechazar que los números sean independientes (Con una confianza de {(1-c)*100}%)</p>\n                                </div>\n                            </div>\n                        </div>  \n                    </div>\n                } \n            </div>\n\n        </div>\n    )\n}\n\nexport default PruebaCorrArrAbMed","import React, { useState, useEffect } from 'react'\nimport {standardNormalTable} from 'simple-statistics'\n\nconst PruebaIndepCorrArrAb = () => {\n    let [c, setC] = useState('')\n    let [nums, setNums] = useState([]);\n    let [testRun, setTestRun] = useState('')\n    let [acepta, setAcepta] = useState('');\n    let [numbersCSVString, setNumbersCSVString] = useState('');\n    let [currentNum, setCurrentNum] = useState('');\n    let [numbers, setNumbers] = useState([]);\n    let [rawList, setRawList] = useState(\"\");\n    let [corridas, setCorridas] = useState(0);\n    let [mCo, setMco] = useState(0);\n    let [chiCoSq, setChicoSq] = useState(0);\n    let [zo, setZo] = useState(0);\n    let [size, setSize] = useState(0);\n    let [display, setDisplay] = useState(false);\n    let [alpha, setAlpha] = useState(0)\n\n    useEffect(()=>{\n        if(zo<alpha){\n            setAcepta(true);\n        }\n        if(zo>0){\n            setTestRun(true);\n        }\n    },[alpha,zo])\n\n    const addCSVValues = () => {\n        if(parseFloat(c)){\n            let temp = numbersCSVString.split(',').map((e)=>parseFloat(e));\n            console.log(temp)\n            setAlpha(parseFloat(c))\n            setNums([...temp])\n            setSize(temp.length)\n        }\n    }\n\n    const addValueToArray = () =>{\n        setNumbers([...numbers, currentNum]);\n        setCurrentNum('');\n    }\n\n    const calculate = () => {\n        console.log(nums)\n        let s = compareAdjacent(nums)\n        let corridas = calculateCorrida(s)\n        let mco = calcMCO(size)\n        let chiCo = calcChiCo(size)\n        let zo = calcZo(corridas, mco, chiCo)\n        standardNormalTable.forEach((val, index)=>{\n            if(val===1-(parseFloat(c)/2))\n                setAlpha(index)\n        })\n        setCorridas(corridas)\n        setMco(mco)\n        setChicoSq(chiCo)\n        setZo(zo)\n        setDisplay(true)\n    }\n\n    const inputToList = () => {\n        let cleanedList = rawList.split(',').map((x) => {\n            return x.trim()\n        })\n        return cleanedList\n    }\n\n    const compareAdjacent = (list) => {\n        let s = []\n        for (let i = 1; i < list.length; i++) {\n            if (list[i - 1] <= list[i]) {\n                s.push(1)\n            } else {\n                s.push(0)\n            }\n        }\n        return s\n    }\n\n    const calculateCorrida = (s) => {\n        let flag = s[0]\n        let Co = 1\n        s.forEach((x) => {\n            if (x !== flag) {\n                Co++\n                flag = x\n            }\n        })\n        return Co\n    }\n\n    const calcMCO = (n) => {\n        return (2 * n - 1) / 3\n    }\n\n    const calcChiCo = (n) => {\n        return (16 * n - 29) / 90\n    }\n\n    const calcZo = (co, mco, chiCo) => {\n        return Math.abs((co - mco) / Math.sqrt(chiCo))\n    }\n\n    return (\n        <div>\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Prueba Independencia Corridas Arriba y Abajo\n                </h1>\n            </div>\n            <div className='form-group'>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de Alpha:</label>\n                        <input id='semilla' type='text' value={c} onChange={(e)=>setC(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row '>\n                    <div className='col-6 d-flex flex-column'>\n                        <div className='d-flex flex-column'>\n                            <label for='numero'>Ingresar digitos de uno en uno:</label>\n                            <div className='d-flex'>\n                                <input id='numero' type='text' value={currentNum} onChange={(e)=>setCurrentNum(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addValueToArray()}>Agregar</div>\n                            </div>\n                        </div>\n                        <div className='d-flex flex-column'>\n                            <label for='csv'>Ingresar digitos separados por comas (Estilo de un csv):</label>\n                            <div className='d-flex'>\n                                <textarea id='csv' className='form-control' value={numbersCSVString} onChange={(e)=>setNumbersCSVString(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addCSVValues()}>Agregar</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col-6 d-flex flex-wrap inputs' >\n                        {numbers.map((num)=>{\n                            return <p className='number-list'>{num}</p>\n                        })}\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end inputs'>\n                        <div className='btn btn-primary' onClick={(e)=>calculate()}>Correr Prueba</div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n            <div className='container'>\n                {\n                    testRun ? \n                    <div className='col-12'>\n                        <div className='row'>\n                            <div className=''> \n                                <div className='row'>\n                                    <div className='col-12'>\n                                        <h7>H0</h7>\n                                        <p>Dado el Z0 = {zo.toFixed(4)}, tiene un valor menor al de la tabla {alpha*.01} no se puede rechazar el \n                                        planteamiento que el conjunto de números son independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                                    </div>\n                                    <div className='col-12'>\n                                        <h7>H1</h7>\n                                        <p>Dado el Z0 = {zo.toFixed(4)}, tiene un valor mayor al de la tabla {alpha*.01} se puede rechazar el \n                                        planteamiento que el conjunto de números son independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                                    </div>\n                                </div>\n                            </div>  \n                        </div>\n                        <div className=\"row d-flex border-bottom\">\n                            <div className=\"col \">\n                                Tamaño:\n                            </div>\n                            <div className=\"col\">\n                                {size}\n                            </div>\n                        </div>\n                        <div className=\"row d-flex border-bottom\">\n                                <div className='col-6'>\n                                    Corridas:\n                                </div>\n                                <div className='col-6'>\n                                    {corridas}\n                                </div>\n                        </div>\n                        <div className=\"row d-flex border-bottom\">\n                                <div className='col-6'>\n                                    MC0:\n                                </div>\n                                <div className='col-6'>\n                                    {mCo.toFixed(4)}\n                                </div>\n                        </div>\n                        <div className=\"row d-flex border-bottom\">\n                                <div className='col-6'>\n                                    Chi2 C0:\n                                </div>\n                                <div className='col-6'>\n                                    {chiCoSq.toFixed(4)}\n                                </div>\n                        </div>\n                        <div className=\"row d-flex border-bottom\">\n                                <div className='col-6'>\n                                    Z0:\n                                </div>\n                                <div className='col-6'>\n                                    {zo.toFixed(4)}\n                                </div>\n                        </div>\n                        {acepta ?\n                        <div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">No se puede negar la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Dado el Z0 = {zo.toFixed(4)}, tiene un valor menor al de la tabla {alpha*.01} no se puede rechazar el \n                                planteamiento que el conjunto de números son independientes (Con un nivel de confianza {(1-c)*100}%) </h5>\n                                <div className=\"row\">\n                                    <div className=\"col-6 d-flex\">\n                                        <p className=\"card-text\">Z de tabla= {alpha*.01}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>:<div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">Se niega la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Dado el Z0 = {zo.toFixed(4)}, tiene un valor mayor al de la tabla {alpha*.01} se puede rechazar el \n                                planteamiento que el conjunto de números son independientes (Con un nivel de confianza {(1-c)*100}%)</h5>\n                                <div className=\"row\">\n                                    <div className=\"col-6 d-flex\">\n                                    <p className=\"card-text ml-auto p-2\">Zo de tabla= {alpha*.01}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                    :\n                    <div className=''> \n                        <div className='row'>\n                            <div className='col-12'>\n                                <h7>H0</h7>\n                                <p>Dado el Z0 = (valor obtenido de Z0), tiene un valor menor al de la tabla (valor obtenido en la tabla de distribución normal) no se puede rechazar el \n                                planteamiento que el conjunto de números son independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                            </div>\n                            <div className='col-12'>\n                                <h7>H1</h7>\n                                <p>Dado el Z0 = (valor obtenido de Z0), tiene un valor mayor al de la tabla (valor obtenido en la tabla de distribución normal) se puede rechazar el \n                                planteamiento que el conjunto de números son independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                            </div>\n                        </div>\n                    </div>  \n                } \n            </div>\n      </div>\n    </div>\n      \n  );\n};\n\nexport default PruebaIndepCorrArrAb;\n","import React, {useState, useEffect} from 'react'\nimport {standardNormalTable} from 'simple-statistics'\n\nconst PruebaMedias = () =>{\n    let [c, setC] = useState('')\n    let [currentNum, setCurrentNum] = useState('');\n    let [numbersCSVString, setNumbersCSVString] = useState('');\n    let [numbers, setNumbers] = useState([]);\n    let [acepta, setAcepta] = useState(false);\n    let [testRun, setTestRun] = useState(false);\n    let [media, setMedia] = useState(0);\n    let [alpha, setAlpha] = useState(0);\n    let [limitI, setLimitI] = useState(0);\n    let [limitS, setLimitS] = useState(0);\n\n    useEffect(()=>{\n        let temp = (alpha*.01)/(Math.pow(12*numbers.length,.5));\n        console.log(temp, alpha)\n        setLimitI(.5-temp);\n        setLimitS(.5+temp);\n    },[alpha])\n\n    useEffect(()=>{\n        if(limitI< media&&limitS>media){\n            setAcepta(true)\n        }\n        if(media>0)\n            setTestRun(true)\n    }, [media])\n    const addCSVValues = () => {\n        if(parseFloat(c)){\n            let nums = numbersCSVString.split(',').map((e)=>parseFloat(e));\n            standardNormalTable.forEach((val, index)=>{\n                if(val===1-(parseFloat(c)/2))\n                    setAlpha(index)\n            });\n            setNumbers([...nums])\n        }\n    }\n    const addValueToArray = () =>{\n        let temp = [...numbers, currentNum];\n        setNumbers(temp);\n        setCurrentNum('');\n    }\n\n    const calculateMed = () =>{\n        if(numbers.length>0){\n            let sum = numbers.reduce((prev,curr)=>{\n                console.log(prev, curr)\n                return (Number(prev)+Number(curr)).toFixed(4)}\n            )\n            setMedia(sum/numbers.length)\n        }\n    }\n\n    return (\n        <div>\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Prueba de Medias\n                </h1>\n            </div>\n            <div className='form-group'>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de Alpha:</label>\n                        <input id='semilla' type='text' value={c} onChange={(e)=>setC(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row '>\n                    <div className='col-6 d-flex flex-column'>\n                        <div className='d-flex flex-column'>\n                            <label for='numero'>Ingresar digitos de uno en uno:</label>\n                            <div className='d-flex'>\n                                <input id='numero' type='text' value={currentNum} onChange={(e)=>setCurrentNum(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addValueToArray()}>Agregar</div>\n                            </div>\n                        </div>\n                        <div className='d-flex flex-column'>\n                            <label for='csv'>Ingresar digitos separados por comas (Estilo de un csv):</label>\n                            <div className='d-flex'>\n                                <textarea id='csv' className='form-control' value={numbersCSVString} onChange={(e)=>setNumbersCSVString(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addCSVValues()}>Agregar</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col-6 d-flex flex-wrap inputs' >\n                        {numbers.map((num)=>{\n                            return <p className='number-list'>{num}</p>\n                        })}\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end inputs'>\n                        <div className='btn btn-primary' onClick={(e)=>calculateMed()}>Correr Prueba</div>\n                    </div>\n                </div>\n            </div>\n            <div className='container'>\n                {\n                    testRun ? \n                    <div>\n                        <div className='container'> \n                            <div className='row'>\n                                <div className='col-12'>\n                                    <h7>H0</h7>\n                                    <p>Dado el ṝ = {media.toFixed(4)}, se encuentra dentro de los límites y no se puede rechazar el \n                                    planteamiento que el conjunto de números tiene media 0.5 (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                                <div className='col-12'>\n                                    <h7>H1</h7>\n                                    <p>Dado el ṝ = {media.toFixed(4)}, no se encuentra dentro de los límites se puede rechazar el \n                                    planteamiento que el conjunto de números tiene media 0.5 (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                            </div>\n                        </div>\n                        {acepta ?\n                        <div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">No se puede negar la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Como el ṝ = {media.toFixed(4)}, se encuentra dentro de los límites y no se puede rechazar el \n                                planteamiento que el conjunto de números tiene media 0.5 (Con un nivel de confianza {(1-c)*100}%) </h5>\n                                <div className=\"row\">\n                                    <div className=\"col-6 d-flex\">\n                                        <p className=\"card-text\">LI= {limitI.toFixed(4)}</p>\n                                        <p className=\"card-text ml-auto p-2\">LS= {limitS.toFixed(4)}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>:<div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">Se niega la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Como el ṝ = {media.toFixed(4)}, no se encuentra dentro de los límites y se puede rechazar el \n                                planteamiento que el conjunto de números tiene media 0.5 (Con un nivel de confianza {(1-c)*100}%) </h5>\n                                <div className=\"row\">\n                                    <div className=\"col-6 d-flex\">\n                                        <p className=\"card-text\">LI= {limitI.toFixed(4)}</p>\n                                        <p className=\"card-text ml-auto p-2\">LS= {limitS.toFixed(4)}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                    :\n                    <div className=''> \n                        <div className='row'>\n                            <div className='col-12'>\n                                <h7>H0</h7>\n                                <p>Dado el ṝ = nuestra media, se encuentra dentro de los límites y no se puede rechazar el \n                                planteamiento que el conjunto de números tiene media 0.5 (Con un nivel de confianza {(1-c)*100}%)</p>\n                            </div>\n                            <div className='col-12'>\n                                <h7>H1</h7>\n                                <p>Dado el ṝ = nuestra media, no se encuentra dentro de los límites se puede rechazar el \n                                planteamiento que el conjunto de números tiene media 0.5 (Con un nivel de confianza {(1-c)*100}%)</p>\n                            </div>\n                        </div>\n                    </div>\n                } \n            </div>\n        </div>\n    )\n}\n\nexport default PruebaMedias","import React, { useState, useEffect } from \"react\";\nimport chiSquareInverse from \"inv-chisquare-cdf\";\n\nconst PruebaPoker = () => {\n  const [nums, setNums] = useState([]);\n  let [currentNum, setCurrentNum] = useState('');\n  let [numbersCSVString, setNumbersCSVString] = useState(\"\");\n  const [categories, setCategories] = useState([\n    { todoDif: 0 },\n    { unPar: 0 },\n    { dosPares: 0 },\n    { unaTercia: 0 },\n    { terciaPar: 0 },\n    { poker: 0 },\n    { quintilla: 0 },\n  ]);\n  const [ei, setEi] = useState([\n    { todoDif: 0 },\n    { unPar: 0 },\n    { dosPares: 0 },\n    { unaTercia: 0 },\n    { terciaPar: 0 },\n    { poker: 0 },\n    { quintilla: 0 },\n  ]);\n  const [eiOi, setEiOi] = useState([\n    { todoDif: 0 },\n    { unPar: 0 },\n    { dosPares: 0 },\n    { unaTercia: 0 },\n    { terciaPar: 0 },\n    { poker: 0 },\n    { quintilla: 0 },\n    { total: 0 },\n  ]);\n  let [c, setC] = useState(0);\n  const [alpha, setAlpha] = useState(0.05);\n  const [x20, setx20] = useState(\"\");\n  const [chi2, setChi2] = useState(0);\n  let [acepta, setAcepta] = useState(false);\n  let [testRun, setTestRun] = useState(false);\n  const class5D = [\"TD\", \"1P\", \"2P\", \"1T\", \"TP\", \"P\", \"Q\"];\n  const prob5D = [0.3024, 0.504, 0.108, 0.009, 0.072, 0.0045, 0.0001];\n\n  const class3D = [\"TD\", \"1P\", \"T\"];\n  const prob3D = [0.72, 0.27, 0.01];\n\n  const class4D = [\"TD\", \"1P\", \"2P\", \"1T\", \"P\"];\n  const prob4D = [0.504, 0.432, 0.027, 0.036, 0.001];\n\n  useEffect(()=>{\n    if(x20  >chi2){\n      setAcepta(true)\n    }\n    if(chi2>0)\n      setTestRun(true);\n  }, [x20, chi2])\n  const addValueToArray = () =>{\n    let temp = [...nums, currentNum];\n    setNums(temp);\n    setCurrentNum('');\n}\n\n  const addCSVValues = () => {\n    if(parseFloat(c)){\n      let numberList = numbersCSVString.split(\",\");\n      let noNewLine = numberList.map((x) => x.replace(/(\\r\\n|\\n|\\r)/gm, \"\"));\n      var noDot = noNewLine.map((s) => s.substring(2));\n      var sorted = noDot.map((x) => {\n        let arr = x.split(\"\");\n        let sorted = arr.sort((a, b) => a - b);\n        let joinArr = sorted.join(\"\");\n\n        return joinArr;\n      });\n      setAlpha(parseFloat(c));\n      setNums(sorted);\n    }\n  };\n\n  const handleClasifications = () => {\n    let todoDif = 0;\n    let unPar = 0;\n    let dosPar = 0;\n    let unaTercia = 0;\n    let terciaPar = 0;\n    let poker = 0;\n    let quintilla = 0;\n    console.log(\"size:\", nums[0].length);\n\n    if (nums[0].length === 5) {\n      let arr = nums.map((str) => {\n        let first = str.split(str[0]).length - 1;\n        let second = str.split(str[1]).length - 1;\n        let third = str.split(str[2]).length - 1;\n        let fourth = str.split(str[3]).length - 1;\n        let fifth = str.split(str[4]).length - 1;\n\n        let all = [];\n        all.push(first);\n        all.push(second);\n        all.push(third);\n        all.push(fourth);\n        all.push(fifth);\n        console.log(all);\n        console.log(\"STR:\", str);\n\n        if (all.includes(5)) {\n          quintilla++;\n        } else if (all.includes(3) && all.includes(2)) {\n          terciaPar++;\n        } else if (all.includes(2) && all.includes(1)) {\n          let count = 0;\n          for (let i = 0; i < all.length; i++) {\n            if (all[i] === 2) {\n              count++;\n            }\n          }\n          if (count === 4) {\n            console.log(\"2P\");\n            dosPar++;\n          } else {\n            unPar++;\n            console.log(\"1P\");\n          }\n        } else if (all.includes(4)) {\n          console.log(\"Poker\");\n          poker++;\n        } else if (all.includes(3) && all.includes(1)) {\n          console.log(\"1T\");\n          unaTercia++;\n        } else {\n          console.log(\"TD\");\n          todoDif++;\n        }\n      });\n      let tempCat = {\n        todoDif: todoDif,\n        unPar: unPar,\n        dosPares: dosPar,\n        unaTercia: unaTercia,\n        terciaPar: terciaPar,\n        poker: poker,\n        quintilla: quintilla,\n      }\n      setCategories(tempCat);\n      return tempCat;\n\n    } else if (nums[0].length === 4) {\n      let arr = nums.map((str) => {\n        let first = str.split(str[0]).length - 1;\n        let second = str.split(str[1]).length - 1;\n        let third = str.split(str[2]).length - 1;\n        let fourth = str.split(str[3]).length - 1;\n\n        let all = [];\n        all.push(first);\n        all.push(second);\n        all.push(third);\n        all.push(fourth);\n        console.log(all);\n\n        if (all.includes(4)) {\n          poker++;\n        } else if (all.includes(3)) {\n          unaTercia++;\n        } else if (all.includes(2)) {\n          let count = 0;\n          for (let i = 0; i < all.length; i++) {\n            if (all[i] === 2) {\n              count++;\n            }\n          }\n          if (count === 4) {\n            console.log(\"2P\");\n            dosPar++;\n          } else {\n            unPar++;\n            console.log(\"1P\");\n          }\n        } else {\n          console.log(\"TD\");\n          todoDif++;\n        }\n      });\n\n      let tempCat = {\n        todoDif: todoDif,\n        unPar: unPar,\n        dosPares: dosPar,\n        unaTercia: unaTercia,\n        poker: poker,\n        terciaPar: 0,\n        quintilla: 0\n      }\n\n      setCategories(tempCat);\n      return tempCat\n    } else if (nums[0].length === 3) {\n      let arr = nums.map((str) => {\n        let first = str.split(str[0]).length - 1;\n        let second = str.split(str[1]).length - 1;\n        let third = str.split(str[2]).length - 1;\n\n        let all = [];\n        all.push(first);\n        all.push(second);\n        all.push(third);\n        console.log(all);\n\n        if (all.includes(3)) {\n          unaTercia++;\n        } else if (all.includes(2)) {\n          unPar++;\n        } else {\n          console.log(\"TD\");\n          todoDif++;\n        }\n      });\n\n      let tempCat = {\n        todoDif: todoDif,\n        unPar: unPar,\n        dosPares: dosPar,\n        unaTercia: unaTercia,\n        poker: poker,\n        terciaPar: 0,\n        quintilla: 0\n      }\n      setCategories(tempCat);\n      return tempCat;\n    }\n  };\n\n  const solve5D = () => {\n    let tempCat= handleClasifications();\n\n    if (nums[0].length === 5) {\n      let tempEi = prob5D.map((x) => parseFloat(x) * nums.length);\n      setEi({\n        todoDif: tempEi[0],\n        unPar: tempEi[1],\n        dosPares: tempEi[2],\n        unaTercia: tempEi[3],\n        terciaPar: tempEi[4],\n        poker: tempEi[5],\n        quintilla: tempEi[6],\n      });\n      let td = Math.pow(tempEi[0] - tempCat.todoDif, 2) / tempEi[0];\n      console.log(td)\n      let unP = Math.pow(tempEi[1] - tempCat.unPar, 2) / tempEi[1];\n      let dosP = Math.pow(tempEi[2] - tempCat.dosPares, 2) / tempEi[2];\n      let unT = Math.pow(tempEi[3] - tempCat.unaTercia, 2) / tempEi[3];\n      let terciaP = Math.pow(tempEi[4] - tempCat.terciaPar, 2) / tempEi[4];\n      let p = Math.pow(tempEi[5] - tempCat.poker, 2) / tempEi[5];\n      let q = Math.pow(tempEi[6] - tempCat.quintilla, 2) / tempEi[6];\n      let total = td + unP + dosP + unT + terciaP + p + q;\n      setEiOi({\n        todoDif: td,\n        unPar: unP,\n        dosPares: dosP,\n        unaTercia: unT,\n        terciaPar: terciaP,\n        poker: p,\n        quintilla: q,\n        total: total,\n      });\n      setx20(total);\n      let chisq = chiSquareInverse.invChiSquareCDF(1 - alpha, 6);\n      setChi2(chisq);\n    } else if (nums[0].length === 4) {\n      let ei = prob4D.map((x) => parseFloat(x) * nums.length);\n      setEi({\n        todoDif: ei[0],\n        unPar: ei[1],\n        dosPares: ei[2],\n        unaTercia: ei[3],\n        terciaPar: \"No Aplica\",\n        poker: ei[4],\n        quintilla: \"No Aplica\",\n      });\n      let td = Math.pow(ei[0] - tempCat.todoDif, 2) / ei[0];\n      let unP = Math.pow(ei[1] - tempCat.unPar, 2) / ei[1];\n      let dosP = Math.pow(ei[2] - tempCat.dosPares, 2) / ei[2];\n      let unT = Math.pow(ei[3] - tempCat.unaTercia, 2) / ei[3];\n      let terciaP = 0;\n      let p = Math.pow(ei[4] - tempCat.poker, 2) / ei[4];\n      let q = 0;\n      let total = td + unP + dosP + unT + terciaP + p + q;\n      setEiOi({\n        todoDif: td,\n        unPar: unP,\n        dosPares: dosP,\n        unaTercia: unT,\n        terciaPar: \"No Aplica\",\n        poker: p,\n        quintilla: \"No Aplica\",\n        total: total,\n      });\n      setx20(total);\n      let chisq = chiSquareInverse.invChiSquareCDF(1 - alpha, 6);\n      setChi2(chisq);\n    } else if (nums[0].length === 3) {\n      let ei = prob3D.map((x) => parseFloat(x) * nums.length);\n      setEi({\n        todoDif: ei[0],\n        unPar: ei[1],\n        dosPares: \"No Aplica\",\n        unaTercia: ei[2],\n        terciaPar: \"No Aplica\",\n        poker: \"No Aplica\",\n        quintilla: \"No Aplica\",\n      });\n      let td = Math.pow(ei[0] - tempCat.todoDif, 2) / ei[0];\n      let unP = Math.pow(ei[1] - tempCat.unPar, 2) / ei[1];\n      let dosP = 0;\n      let unT = Math.pow(ei[2] - tempCat.unaTercia, 2) / ei[2];\n      let terciaP = 0;\n      let p = 0;\n      let q = 0;\n      let total = td + unP + dosP + unT + terciaP + p + q;\n      setEiOi({\n        todoDif: td,\n        unPar: unP,\n        dosPares: \"No Aplica\",\n        unaTercia: unT,\n        terciaPar: \"No Aplica\",\n        poker: \"No Aplica\",\n        quintilla: \"No Aplica\",\n        total: total,\n      });\n      setx20(total);\n      let chisq = chiSquareInverse.invChiSquareCDF(1 - alpha, 6);\n      setChi2(chisq);\n    }\n  };\n\n  return (\n    <div>\n      <div className='row d-flex justify-content-center'>\n        <h1>\n            Prueba de Poker\n        </h1>\n      </div>\n      <div className='form-group'>\n          <div className='row'>\n              <div className='col-6 d-flex justify-content-between inputs' >\n                  <label for='semilla'>Valor de Alpha:</label>\n                  <input id='semilla' type='text' value={c} onChange={(e)=>setC(e.target.value)}/>\n              </div>\n          </div>\n          <div className='row '>\n            <div className='col-6 d-flex flex-column'>\n                <div className='d-flex flex-column'>\n                    <label for='numero'>Ingresar digitos de uno en uno:</label>\n                    <div className='d-flex'>\n                        <input id='numero' type='text' value={currentNum} onChange={(e)=>setCurrentNum(e.target.value)}/>\n                        <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addValueToArray()}>Agregar</div>\n                    </div>\n                </div>\n                <div className='d-flex flex-column'>\n                    <label for='csv'>Ingresar digitos separados por comas (Estilo de un csv):</label>\n                    <div className='d-flex'>\n                        <textarea id='csv' className='form-control' value={numbersCSVString} onChange={(e)=>setNumbersCSVString(e.target.value)}/>\n                        <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addCSVValues()}>Agregar</div>\n                    </div>\n                </div>\n            </div>\n            <div className='col-6 d-flex flex-wrap inputs' >\n                {nums.map((num)=>{\n                    return <p className='number-list'>{num}</p>\n                })}\n            </div>\n        </div>\n        <div className='row'>\n          <div className='col-6 d-flex justify-content-end inputs'>\n            <div className='btn btn-primary' onClick={(e)=>solve5D()}>Correr Prueba</div>\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        {\n          testRun ? \n            <div>\n              <div className='row'>\n                  <div className=''> \n                      <div className='row'>\n                          <div className='col-12'>\n                              <h7>H0</h7>\n                              <p>El estadístico X0^2 = {x20.toFixed(4)}, comparándolo con nuestro estadístico de tabla = {chi2.toFixed(4)}, entonces no rechazamos \n                              que los números del conjunto sean independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                          </div>\n                          <div className='col-12'>\n                              <h7>H1</h7>\n                              <p>El estadístico X0^2 = {x20.toFixed(4)}, comparándolo con nuestro estadístico de tabla = {chi2.toFixed(4)}, entonces \n                              rechazamos que los números del conjunto sean independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                          </div>\n                      </div>\n                  </div>  \n              </div>\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Categorias</th>\n                    <th scope=\"col\">Oi</th>\n                    <th scope=\"col\">Ei</th>\n                    <th scope=\"col\"> (Ei-Oi)^2/Ei </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>TD</td>\n                    <td>{categories.todoDif}</td>\n                    <td>{ei.todoDif.toFixed(4)}</td>\n                    <td>{eiOi.todoDif.toFixed(4)}</td>\n                  </tr>\n                  <tr>\n                    <td>1P</td>\n                    <td>{categories.unPar}</td>\n                    <td>{ei.unPar.toFixed(4)}</td>\n                    <td>{eiOi.unPar.toFixed(4)}</td>\n                  </tr>\n                  <tr>\n                    <td>2P</td>\n                    <td>{categories.dosPares}</td>\n                    <td>{ei.dosPares === \"No Aplica\" ? ei.dosPares : ei.dosPares.toFixed(4)  }</td>\n                    <td>{eiOi.dosPares === \"No Aplica\" ? eiOi.dosPares: eiOi.dosPares.toFixed(4)}</td>\n                  </tr>\n                  <tr>\n                    <td>T</td>\n                    <td>{categories.unaTercia}</td>\n                    <td>{ei.unaTercia.toFixed(4)}</td>\n                    <td>{eiOi.unaTercia.toFixed(4)}</td>\n                  </tr>\n                  <tr>\n                    <td>TP</td>\n                    <td>{categories.terciaPar}</td>\n                    <td>{ei.terciaPar === \"No Aplica\" ? ei.terciaPar : ei.terciaPar.toFixed(4)}</td>\n                    <td>{eiOi.terciaPar === \"No Aplica\" ? eiOi.terciaPar : eiOi.terciaPar.toFixed(4)}</td>\n                  </tr>\n                  <tr>\n                    <td>P</td>\n                    <td>{categories.poker}</td>\n                    <td>{ei.poker === \"No Aplica\" ? ei.poker : ei.poker.toFixed(4)}</td>\n                    <td>{eiOi.poker===\"No Aplica\" ? eiOi.poker : eiOi.poker.toFixed(4)}</td>\n                  </tr>\n                  <tr>\n                    <td>Q</td>\n                    <td>{categories.quintilla}</td>\n                    <td>{ei.quintilla === \"No Aplica\" ? ei.quintilla : ei.quintilla.toFixed(4)}</td>\n                    <td>{eiOi.quintilla === \"No Aplica\" ? eiOi.quintilla : eiOi.quintilla.toFixed(4)}</td>\n                  </tr>\n                  <tr>\n                    <td>Total</td>\n                    <td></td>\n                    <td></td>\n                    <td>{eiOi.total.toFixed(4)}</td>\n                  </tr>\n                  <tr>\n                    <td></td>\n                    <td></td>\n                    <td>CHISQRINV </td>\n                    <td>{chi2.toFixed(4)}</td>\n                  </tr>\n                </tbody>\n              </table>\n              {acepta ? \n                <div className=\"card text-white bg-secondary mb-3\" >\n                  <div className=\"card-header\">No se puede negar la hipotesis</div>\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">\n                      El estadístico X0^2 = {x20.toFixed(4)}, comparándolo con nuestro estadístico de tabla = {chi2.toFixed(4)}, entonces rechazamos \n                      que los números del conjunto sean independientes (Con un nivel de confianza {(1-c)*100}%)\n                    </h5>\n                    <div className=\"row\">\n                        <div className=\"col-6 d-flex\">\n                            <p className=\"card-text\">Valor de las tabla: {chi2.toFixed(4)}</p>\n                        </div>\n                    </div>\n                    </div>\n                  </div>:<div className=\"card text-white bg-secondary mb-3\" >\n                  <div className=\"card-header\">Se niega la hipotesis</div>\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">\n                      El estadístico X0^2 = {x20.toFixed(4)}, comparándolo con nuestro estadístico de tabla = {chi2.toFixed(4)}, entonces no \n                      rechazamos que los números del conjunto sean independientes (Con un nivel de confianza {(1-c)*100}%)\n                    </h5>\n                    <div className=\"row\">\n                        <div className=\"col-6 d-flex\">\n                            <p className=\"card-text\">Valor de las tabla: {chi2.toFixed(4)}</p>\n                        </div>\n                    </div>\n                  </div>\n                </div>\n              }\n            </div>:\n            <div className='row'>\n              <div className=''> \n                <div className='row'>\n                  <div className='col-12'>\n                      <h7>H0</h7>\n                      <p>El estadístico X0^2 = (X0^2 obtenido), comparándolo con nuestro estadístico de tabla = (estadístico de tabla obtenido), entonces no rechazamos \n                      que los números del conjunto sean independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                  </div>\n                  <div className='col-12'>\n                      <h7>H1</h7>\n                      <p>El estadístico X2o = (X0^2 obtenido), comparándolo con nuestro estadístico de tabla = (estadístico de tabla obtenido), entonces \n                      rechazamos que los números del conjunto sean independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                  </div>\n                </div>\n              </div>  \n            </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default PruebaPoker;\n","import React, {useState, useEffect} from 'react'\nimport chiSquareInverse from 'inv-chisquare-cdf'\n\nconst PruebaSerie = () =>{\n    let [cuadrants, setCuadrants] = useState([])\n    let [c, setC] = useState('');\n    let [m, setM]= useState(0);\n    let [currentNum, setCurrentNum] = useState('');\n    let [numbersCSVString, setNumbersCSVString] = useState('');\n    let [numbers, setNumbers] = useState([]);\n    let [numbersLength, setNumbersLength] = useState(0);\n    let [x2Total, setX2Total] = useState(0);\n    let [acepta, setAcepta] = useState(false);\n    let [testRun, setTestRun] = useState(false);\n    let [alpha, setAlpha] = useState(0.05);\n    let [chiValue, setChiValue] = useState(0);\n    let [testTable, setTestTable] = useState([]);\n\n    useEffect(()=>{\n        if(chiValue>x2Total){\n            setAcepta(true)\n        }\n        if(testTable.length>0)\n            setTestRun(true);\n    }, [x2Total, chiValue])\n\n    useEffect(()=>{\n        let degreeFreed = m > 2 ? m -1 : 1;\n        console.log(degreeFreed)\n        setChiValue(chiSquareInverse.invChiSquareCDF(1-alpha/2,degreeFreed));\n    },[alpha, m])\n\n    const addCSVValues = () => {\n        if(parseFloat(c)){\n            let nums = numbersCSVString.split(',').map((e)=>parseFloat(e));\n            setAlpha(parseFloat(c));\n            setNumbers([...nums]);\n            setNumbersLength(nums.length);\n        }\n    }\n    const addValueToArray = () =>{\n        let temp = [...numbers, currentNum];\n        setNumbers(temp);\n        setNumbersLength(temp.length)\n        setCurrentNum('');\n    }\n\n    const closestSquareTable = (m) =>{\n        let notFound = true;\n        let i = 0;\n        while(notFound){\n            let ibase2 = Math.pow(i,2)\n            if(m> ibase2){\n                i++;\n            } else if(m<ibase2){\n                m = ibase2;\n                notFound = false;\n            } else if(m==ibase2){\n                notFound =false;\n            }\n        }\n        return m;\n    }\n\n    const calculateSeriesTest = () =>{\n        if(numbers.length>0){\n            let nums = [...numbers]\n            let divs = Math.sqrt(numbersLength);\n            let tempM = closestSquareTable(divs);\n            let coordinates = []\n            console.log(tempM)\n            setM(tempM);\n            let ei = numbersLength/tempM;\n            for(let i = 0; i < numbersLength-1;i++){\n                coordinates.push({xValue: nums[i], yValue: nums[i+1]})\n            }\n            let base = Math.sqrt(tempM);\n            let coordX = 0;\n            let coordY = 0;\n            let range = 1/base;\n            let tableCuadrnts = [];\n            for(let i = 0; i < base; i++){\n                for(let j = 0; j < base; j++){\n                    tableCuadrnts.push({\n                        lowerX: coordX,\n                        higherX: (coordX+range),\n                        lowerY: coordY,\n                        higherY: (coordY+range)\n                    })\n                    coordY+=range;\n                }\n                coordX +=range;\n                coordY = 0;\n            }\n            setCuadrants(tableCuadrnts);\n            \n            let ammountByCuadrant = []\n            for (let i = 0; i < tableCuadrnts.length; i++) {\n                for (let j = 0; j < coordinates.length; j++) {\n                    if (\n                        coordinates[j].xValue > tableCuadrnts[i].lowerX &&\n                        coordinates[j].xValue < tableCuadrnts[i].higherX &&\n                        coordinates[j].yValue > tableCuadrnts[i].lowerY &&\n                        coordinates[j].yValue < tableCuadrnts[i].higherY\n                    ) {\n                        ammountByCuadrant.push(i);\n                    }\n                }\n            }\n\n            let tempOi = new Array(tableCuadrnts.length).fill(0);\n\n            for(let i = 0; i< ammountByCuadrant.length; i++){\n                tempOi[ammountByCuadrant[i]]++;\n            }\n\n            let tempx2Vals= [];\n            let tempx2TotalVal = 0;\n            for (let i = 0; i < tempM; i++) {\n                console.log(ei )\n                tempx2Vals[i] = parseFloat(\n                    (\n                        Math.pow(ei - tempOi[i], 2) / ei\n                    )\n                );\n                tempx2TotalVal += tempx2Vals[i];\n            }\n            setX2Total(tempx2TotalVal);\n\n            let tempTestTable = []\n            for(let i = 0; i <tableCuadrnts.length; i++){\n                tempTestTable.push({interval: i+1, oi: tempOi[i], ei: ei, x2: tempx2Vals[i]});\n            }\n            setTestTable(tempTestTable)\n        }\n    }\n\n    return (\n        <div>\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Prueba de Series\n                </h1>\n            </div>\n            <div className='form-group'>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de Alpha:</label>\n                        <input id='semilla' type='text' value={c} onChange={(e)=>setC(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row '>\n                    <div className='col-6 d-flex flex-column'>\n                        <div className='d-flex flex-column'>\n                            <label for='numero'>Ingresar digitos de uno en uno:</label>\n                            <div className='d-flex'>\n                                <input id='numero' type='text' value={currentNum} onChange={(e)=>setCurrentNum(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addValueToArray()}>Agregar</div>\n                            </div>\n                        </div>\n                        <div className='d-flex flex-column'>\n                            <label for='csv'>Ingresar digitos separados por comas (Estilo de un csv):</label>\n                            <div className='d-flex'>\n                                <textarea id='csv' className='form-control' value={numbersCSVString} onChange={(e)=>setNumbersCSVString(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addCSVValues()}>Agregar</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col-6 d-flex flex-wrap inputs' >\n                        {numbers.map((num)=>{\n                            return <p className='number-list'>{num}</p>\n                        })}\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end inputs'>\n                        <div className='btn btn-primary' onClick={(e)=>calculateSeriesTest()}>Correr Prueba</div>\n                    </div>\n                </div>\n            </div>\n            <div className='continer'>\n                {\n                    testRun ? \n                    <div>\n                        <div className='row'>\n                            <div className=''> \n                                <div className='row'>\n                                    <div className='col-12'>\n                                        <h7>H0</h7>\n                                        <p> El estadístico de tabla = {chiValue.toFixed(4)} es mayor al error total {x2Total.toFixed(4)}, entonces no se puede rechazar \n                                        que los números del conjunto consecutivos sean independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                                    </div>\n                                    <div className='col-12'>\n                                        <h7>H1</h7>\n                                        <p>El estadístico de tabla = {chiValue.toFixed(4)} es menor al error total {x2Total.toFixed(4)}, entonces \n                                        rechazamos que los números del conjunto consecutivos sean independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                                    </div>\n                                </div>\n                            </div>  \n                        </div>\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>\n                                        Intervalo\n                                    </th>\n                                    <th>\n                                        Oi\n                                    </th>\n                                    <th>\n                                        Ei = n/m\n                                    </th>\n                                    <th>\n                                        (Ei-Oi)^2/Ei\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    testTable.map((e)=>{{\n                                        return(\n                                            <tr>\n                                                <td>{e.interval}</td>\n                                                <td>{e.oi}</td>\n                                                <td>{e.ei.toFixed(4)}</td>\n                                                <td>{e.x2.toFixed(4)}</td>\n                                            </tr>\n                                        )\n                                    }})\n                                }\n                            </tbody>\n                        </table>\n                        {acepta ?\n                        <div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">No se puede negar la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">El estadístico de tabla = {chiValue.toFixed(4)} es mayor al error total {x2Total.toFixed(4)}, entonces no se puede rechazar \n                                        que los números del conjunto consecutivos sean independientes (Con un nivel de confianza {(1-c)*100}%) </h5>\n                                <div className=\"row\">\n                                    <div className=\"col-6 d-flex\">\n                                        <p className=\"card-text\">Valor de las tablas: {chiValue}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>:<div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">Se niega la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">El estadístico de tabla = {chiValue.toFixed(4)} es menor al error total {x2Total.toFixed(4)}, entonces \n                                        rechazamos que los números del conjunto consecutivos sean independientes (Con un nivel de confianza {(1-c)*100}%) </h5>\n                                <div className=\"row\">\n                                    <div className=\"col-6 d-flex\">\n                                        <p className=\"card-text\">Valor de las tablas: {chiValue}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                    :\n                    <div className='container'>\n                        <div className=''> \n                            <div className='row'>\n                                <div className='col-12'>\n                                    <h7>H0</h7>\n                                    <p> El estadístico de tabla = (valor de la tabla de chi cuadrada) es mayor al error total (valor obtenido de X0^2), entonces no se puede rechazar \n                                    que los números del conjunto consecutivos sean independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                                <div className='col-12'>\n                                    <h7>H1</h7>\n                                    <p>El estadístico de tabla = (valor de la tabla de chi cuadrada) es menor al error total (valor obtenido de X0^2), entonces \n                                    rechazamos que los números del conjunto consecutivos sean independientes (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                            </div>\n                        </div>  \n                    </div>\n                } \n            </div>\n        </div>\n    )\n}\n\nexport default PruebaSerie","import React, {useState, useEffect} from 'react'\nimport {getKormorovSmirnov} from '../../services/kolmogorovSmirnov'\n\nconst PruebaUniformidadKolSmir = () =>{\n    let [c, setC] = useState('')\n    let [currentNum, setCurrentNum] = useState('');\n    let [numbersCSVString, setNumbersCSVString] = useState('');\n    let [numbers, setNumbers] = useState([]);\n    let [numbersLength, setNumbersLength] = useState(0);\n    let [acepta, setAcepta] = useState(false);\n    let [testRun, setTestRun] = useState(false);\n    let [alpha, setAlpha] = useState(0);\n    let [testTable, setTestTable] = useState([]);\n    let [dTableValue, setDTableValue] = useState(0);\n    let [dValue, setDValue] = useState(0);\n    let [dMaxVal, setDMaxVal] = useState(0);\n    let [dMinVal, setDMinVal] = useState(0);\n\n    useEffect(()=>{\n        if(dTableValue>dValue){\n            setAcepta(true);\n        }\n        if(dTableValue>0 && dValue > 0){\n            setTestRun(true);\n        }\n    },[dValue])\n    useEffect(()=>{\n        setDTableValue(getKormorovSmirnov(alpha,numbersLength));\n    },[alpha, numbersLength])\n\n    useEffect(()=>{\n        console.log(dMaxVal, dMinVal)\n        setDValue(dMaxVal>dMinVal?dMaxVal:dMinVal)\n    }, [dMaxVal,dMinVal])\n    const addCSVValues = () => {\n        if(parseFloat(c)){\n            let nums = numbersCSVString.split(',').map((e)=>parseFloat(e));\n            if(nums.length<=20){\n                setAlpha(parseFloat(c))\n                setNumbers([...nums])\n                setNumbersLength(nums.length);\n            }\n        }\n    }\n    const addValueToArray = () =>{\n        let temp = [...numbers]\n        temp.push(currentNum)\n        setNumbers(temp);\n        setCurrentNum('');\n        setNumbersLength(temp.length);\n    }\n\n    const calculateTest = () =>{\n        if(numbers.length>0){\n            let nums = numbers.sort((a,b)=> parseFloat(a)-parseFloat(b));\n            let firstRow = []\n            let secondRow = []\n            let thirdRow = []\n            let fourthRow = []\n            let fifthRow = [];\n            for(let i = 0; i< numbersLength; i++){\n                firstRow[i] = (i + 1) / numbersLength;\n                secondRow[i] = nums[i];\n                thirdRow[i] = i / numbersLength;\n                fourthRow[i] = parseFloat(firstRow[i]-secondRow[i]).toFixed(4);\n                fifthRow[i] = parseFloat(nums[i] - thirdRow[i]).toFixed(4)\n            }\n            let table = [firstRow, secondRow, thirdRow, fourthRow,fifthRow];\n            setTestTable(table);\n            setDMaxVal(Math.max(...fourthRow));\n            setDMinVal(Math.min(...fifthRow));\n        }\n    }\n\n    return (\n        <div>\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Prueba de Uniformidad Kolmogorov Smirnov\n                </h1>\n            </div>\n            <div className='form-group'>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-between inputs' >\n                        <label for='semilla'>Valor de Alpha:</label>\n                        <input id='semilla' type='text' value={c} onChange={(e)=>setC(e.target.value)}/>\n                    </div>\n                </div>\n                <div className='row '>\n                    <div className='col-6 d-flex flex-column'>\n                        <div className='d-flex flex-column'>\n                            <label for='numero'>Ingresar digitos de uno en uno:</label>\n                            <div className='d-flex'>\n                                <input id='numero' type='text' value={currentNum} onChange={(e)=>setCurrentNum(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addValueToArray()}>Agregar</div>\n                            </div>\n                        </div>\n                        <div className='d-flex flex-column'>\n                            <label for='csv'>Ingresar digitos separados por comas (Estilo de un csv):</label>\n                            <div className='d-flex'>\n                                <textarea id='csv' className='form-control' value={numbersCSVString} onChange={(e)=>setNumbersCSVString(e.target.value)}/>\n                                <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addCSVValues()}>Agregar</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col-6 d-flex flex-wrap inputs' >\n                        {numbers.map((num)=>{\n                            return <p className='number-list'>{num}</p>\n                        })}\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-6 d-flex justify-content-end inputs'>\n                        <div className='btn btn-primary' onClick={(e)=>calculateTest()}>Correr Prueba</div>\n                    </div>\n                </div>\n            </div>\n            <div className='container'>\n                {\n                    testRun ? \n                    <div>\n                        <div className='container'> \n                            <div className='row'>\n                                <div className='col-12'>\n                                    <h7>H0</h7>\n                                    <p>Como el D = {dValue.toFixed(4)}, se encuentra tiene un valor menor al de la tabla {dTableValue.toFixed(4)} no se puede rechazar el \n                                    planteamiento que los números se distribuyen uniformemente (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                                <div className='col-12'>\n                                    <h7>H1</h7>\n                                    <p>Como el D = {dValue.toFixed(4)}, se encuentra tiene un valor mayor al de la tabla {dTableValue.toFixed(4)} se puede rechazar el \n                                    planteamiento que los números se distribuyen uniformemente (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                            </div>\n                        </div>\n                        {acepta ?\n                        <div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">No se puede negar la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Como el D = {dValue.toFixed(4)}, se encuentra tiene un valor menor al de la tabla {dTableValue.toFixed(4)} no se puede rechazar el \n                                planteamiento que los números se distribuyen uniformemente (Con un nivel de confianza {(1-c)*100}%) </h5>\n                                <div className=\"row\">\n                                    <div className=\"col-6 d-flex\">\n                                        <p className=\"card-text\">D= {dValue.toFixed(4)}</p>\n                                        <p className=\"card-text ml-auto p-2\">D de tabla= {dTableValue.toFixed(4)}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>:<div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\">Se niega la hipotesis</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Como el D = {dValue.toFixed(4)}, se encuentra tiene un valor mayor al de la tabla {dTableValue.toFixed(4)} se puede rechazar el \n                                planteamiento que los números se distribuyen uniformemente (Con un nivel de confianza {(1-c)*100}%) </h5>\n                                <div className=\"row\">\n                                    <div className=\"col-6 d-flex\">\n                                    <p className=\"card-text\">D= {dValue.toFixed(4)}</p>\n                                    <p className=\"card-text ml-auto p-2\">D de tabla= {dTableValue.toFixed(4)}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                    :\n                    <div className='container'> \n                            <div className='row'>\n                                <div className='col-12'>\n                                    <h7>H0</h7>\n                                    <p>Como el D = (valor obtenido de D), se encuentra tiene un valor menor al de la tabla (valor de la tabla) no se puede rechazar el \n                                planteamiento que los números se distribuyen uniformemente (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                                <div className='col-12'>\n                                    <h7>H1</h7>\n                                    <p>Como el D = (valor obtenido de D), se encuentra tiene un valor mayor al de la tabla (valor de la tabla) se puede rechazar el \n                                planteamiento que los números se distribuyen uniformemente (Con un nivel de confianza {(1-c)*100}%)</p>\n                                </div>\n                            </div>\n                        </div>\n                } \n            </div>\n        </div>\n    )\n}\n\nexport default PruebaUniformidadKolSmir","import React, {useState, useEffect} from 'react'\n\nconst MetodoConvolucion = () =>{\n    const options = [{\n        label: 'Erlang',\n        value: 'erlang',\n        formula: '𝑌=𝐸𝑅𝑖=−1/𝑘𝜆 𝑙𝑛 ∏(𝑖=1)^𝑘:(1−𝑟𝑖)'\n    },{\n        label: 'Normal',\n        value: 'normal',\n        formula: '𝑋=𝑁𝑖= [∑_(𝑖=1)^12:(𝑟𝑖) −6 ]+𝜎+𝜇'\n    },{\n        label: 'Binomial',\n        value: 'binomial',\n        formula: '𝑌=𝐵𝑖=𝐵𝐸1+𝐵𝐸2+ …+𝐵𝐸𝑁 ~𝐵𝐼(𝑁,𝑝)'\n    }]\n    let [dummy, setDummy] = useState([]);\n    let [distSelected, setDistSelected] = useState(options[0].value);\n    let [distName, setDistName] = useState(\"Selecciona una Distribución\");\n    let [distFormulaStr, setDistFormulaStr] = useState(\"\");\n    let [display, setDisplay] = useState(false);\n    // ERLANG\n    let [num_erlang, setNum_erlang] = useState(0);\n    let [media_erlang, setMedia_erlang] = useState(0);\n    let [cantidad_piezas_erlang, setCantidad_piezas_erlang] = useState(0);\n    let [valores_Xi_erlang, setValores_Xi_erlang] = useState([]);\n    // NORMAL\n    let [norMedia, setNorMedia] = useState(0);\n    let [norDS, setNorDS] = useState(0);\n    let [norRandomN, setNorRandomN] = useState(0);\n    let [norResults, setNorResults] = useState([]);\n    // BINOMIAL\n    let [biProb, setBiProb] = useState(0);\n    let [biN, setBiN] = useState(0);\n    let [biDef, setBiDef] = useState([]);\n  \n    useEffect(() => {\n        if (distSelected === options[0].value) {\n            setDistName(options[0].label);\n            setDistFormulaStr(options[1].formula);\n        } else if (distSelected === options[1].value) {\n            setDistName(options[1].label)\n            setDistFormulaStr(options[1].formula)\n        } else if (distSelected === options[2].value) {\n            setDistName(options[2].label)\n            setDistFormulaStr(options[2].formula)\n        }\n    }, [distSelected]);\n  \n    const calcDistErlang = () => {\n      let num_random = [];\n      let valores_Xi = [];\n  \n      for (let i = 0; i < num_erlang; i++) {\n        num_random.push([]);\n        for (let e = 0; e < cantidad_piezas_erlang; e++) {\n          num_random[i][e] = parseFloat(\n            (1 - (Math.random() * (0.9999 - 0.0001) + 0.0001)).toFixed(4)\n          );\n        }\n      }\n\n      let tempErTable = [];\n      let multi = 1;\n      let tempRis = []\n      for (let i = 0; i < cantidad_piezas_erlang; i++) {\n          tempRis=[]\n        for (let j = 0; j < num_erlang; j++) {\n            tempRis.push(num_random[j][i]);\n            multi *= num_random[j][i];\n        }\n        let value = ((-media_erlang / num_erlang) * Math.log(multi)).toFixed(4);\n        valores_Xi.push(value);\n        tempErTable.push({xi: value, ri: tempRis})\n        multi = 1;\n      }\n      let tempDummy = new Array(num_erlang).fill(0)\n      setDummy(tempDummy);\n      console.log(tempDummy)\n      setValores_Xi_erlang(tempErTable);\n      console.log(\"num random\", num_random);\n      console.log(\"valores xi\", valores_Xi);\n    };\n  \n    const calcDistNormal = () => {\n      let num_random = [];\n      let valores_Xi = [];\n      let suma_r = [];\n      let resta_r = [];\n      let tabla = [];\n  \n      for (let i = 0; i < norRandomN * 12; i++) {\n        num_random[i] = parseFloat(\n          (1 - (Math.random() * (0.9999 - 0.0001) + 0.0001)).toFixed(4)\n        );\n      }\n  \n      for (let i = 0; i < norRandomN * 12; i += 12) {\n        let count = 0;\n        for (let e = 0; e < 12; e++) {\n          count += num_random[i + e];\n        }\n        suma_r.push(count.toFixed(4));\n        resta_r.push((count - 6).toFixed(4));\n      }\n  \n      for (let i = 0; i < norRandomN; i++) {\n        valores_Xi[i] = parseFloat(resta_r[i]) + norDS + norMedia;\n      }\n  \n      for (let i = 0; i < norRandomN; i++) {\n        let obj = {\n          suma: suma_r[i],\n          resta: resta_r[i],\n          xi: valores_Xi[i],\n        };\n        tabla.push(obj);\n      }\n  \n      setNorResults(tabla);\n      /*\n          console.log(\"num random\", num_random);\n          console.log(\"valores xi\", valores_Xi);\n          console.log(\"suma_r\", suma_r)*/\n    };\n  \n    const calcDistBinomial = () => {\n      let num_random = [];\n      let valores_Xi = [];\n      let error = 1 - biProb*.01;\n      let valores_df = [];\n  \n      for (let i = 0; i < biN; i++) {\n        num_random.push([]);\n        valores_Xi.push([]);\n        for (let e = 0; e < biN; e++) {\n          num_random[i][e] = parseFloat(\n            (1 - (Math.random() * (0.9999 - 0.0001) + 0.0001)).toFixed(4)\n          );\n        }\n      }\n      console.log(error)\n  \n      for (let i = 0; i < biN; i++) {\n        for (let j = 0; j < biN; j++) {\n          if (num_random[j][i] <= error) {\n            valores_Xi[j][i] = 1;\n          } else {\n            valores_Xi[j][i] = 0;\n          }\n        }\n      }\n\n      for (let i = 0; i < biN; i++) {\n        let count = 0;\n        for (let j = 0; j < biN; j++) {\n          if (valores_Xi[j][i] == 1) {\n            count++;\n          }\n        }\n        valores_df.push(count);\n      }\n  \n      setBiDef(valores_df);\n      console.log(\"num random\", num_random);\n      console.log(\"valores xi\", valores_Xi);\n      console.log(\"valores df\", valores_df);\n    };\n  \n    const calculate = () => {\n      if (distSelected === options[0].value) {\n        calcDistErlang();\n      } else if (distSelected === options[1].value) {\n        calcDistNormal();\n      } else if (distSelected === options[2].value) {\n        calcDistBinomial();\n      }\n      setDisplay(true);\n    };\n  \n    return (\n      <div className=\"container\">\n        <div className=\"row d-flex justify-content-center\">\n          <h1>Metodo de Convolución</h1>\n        </div>\n  \n        <div className=\"form-group\">\n  \n          <div className=\"form-group\">\n                <div className=\"col-6\">\n                    <div className=\"form-group\">\n                        <select className='form-control' value={distSelected} onChange={(e)=>{console.log(e.target);setDistSelected(e.target.value)}}>\n                            {options.map((option)=>{\n                                return <option value={option.value}>{option.label}</option>\n                            })}\n                        </select>\n                    </div>\n                </div>\n          </div>\n  \n          <div className=\"row\">\n            <span className=\"col\">{distFormulaStr}</span>\n          </div>\n        </div>\n  \n        {/* ERLANG */}\n        {distSelected === options[0].value && (\n          <div className=\"row\">\n            <div className=\"form-group\">\n              <div className=\"col-6 d-flex justify-content-between inputs\">\n                <label>\n                    Erlang:\n                </label>\n                <input\n                  type=\"number\"\n                  id=\"erlang\"\n                  onChange={(e) => setNum_erlang(e.target.value * 1)}\n                />\n              </div>\n  \n              <div className=\"col-6 d-flex justify-content-between inputs\">\n                <label>\n                    Media:{\" \"}\n                  </label>\n                <input\n                  type=\"number\"\n                  id=\"media\"\n                  onChange={(e) => setMedia_erlang(e.target.value * 1)}\n                />\n              </div>\n  \n              <div className=\"ol-6 d-flex justify-content-between inputs\">\n                <label>\n                    Piezas:{\" \"}\n                </label>\n                <input\n                  type=\"number\"\n                  min=\"100\"\n                  max=\"999999\"\n                  onChange={(e) => setCantidad_piezas_erlang(e.target.value * 1)}\n                />\n              </div>\n  \n              <div className=\"input-group mb-3\">\n                <div className=\"btn btn-primary\" onClick={(e) => calculate()}>\n                  Calcular\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        {display && distSelected === options[0].value && (\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                {\n                    dummy.map((e,i)=>{\n                        console.log(i)\n                        return <th scope=\"col\">1 - Ri</th>\n                    })\n                }\n                <th scope=\"col\">Xi</th>\n              </tr>\n            </thead>\n            <tbody>\n              {valores_Xi_erlang.map((e, k) => {\n                  console.log(e)\n                return (\n                  <tr scope=\"row\" key={k}>\n                    <td>{k + 1}</td>\n                    {e.ri.map((eri)=>{\n                        return <td>{eri.toFixed(4)}</td>\n                    })}\n                    <td>{e.xi}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n        {/* NORMAL */}\n        {distSelected === options[1].value && (\n          <div className=\"row\">\n            <div className=\"form-group\">\n              <div className=\"col-6 d-flex justify-content-between inputs\">\n                <label>\n                    Media:{\" \"}\n                  </label>\n                <input\n                  type=\"number\"\n                  onChange={(e) => setNorMedia(e.target.value * 1)}\n                />\n              </div>\n  \n              <div className=\"input-group mb-3\">\n                <label>\n                    Desviación estándar:{\" \"}\n                  </label>\n                <input\n                  type=\"number\"\n                  onChange={(e) => setNorDS(e.target.value * 1)}\n                />\n              </div>\n  \n              <div className=\"col-6 d-flex justify-content-between inputs\">\n                <label>\n                    N de variables aleatorias:{\" \"}\n                  </label>\n                <input\n                  type=\"number\"\n                  onChange={(e) => setNorRandomN(e.target.value * 1)}\n                />\n                  <span >\n                    tamaño{\" \"}\n                  </span>\n              </div>\n  \n              <div className=\"input-group mb-3\">\n                <div className=\"btn btn-primary\" onClick={(e) => calculate()}>\n                  Calcular\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        {display && distSelected === options[1].value && (\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">suma</th>\n                <th scope=\"col\">resta</th>\n                <th scope=\"col\">xi</th>\n              </tr>\n            </thead>\n            <tbody>\n              {norResults.map((e, k) => {\n                return (\n                  <tr scope=\"row\" key={k}>\n                    <td>{k + 1}</td>\n                    <td>{e.suma}</td>\n                    <td>{e.resta}</td>\n                    <td>{e.xi.toFixed(4)}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n        {/* BINOMIAL */}\n        {distSelected === options[2].value && (\n          <div className=\"row\">\n            <div className=\"form-group\">\n              <div className=\"ol-6 d-flex justify-content-between inputs\">\n                <label>\n                    N:{\" \"}\n                  </label>\n                <input\n                  type=\"number\"\n                  onChange={(e) => setBiN(e.target.value * 1)}\n                />\n                <span>\n                    tamaño{\" \"}\n                  </span>\n              </div>\n  \n              <div className=\"input-group mb-3\">\n                <label>\n                    P:{\" \"}\n                  </label>\n                <input\n                  type=\"number\"\n                  onChange={(e) => setBiProb(e.target.value * 1)}\n                />\n                  <span >\n                    % [Probabilidad de éxito] :{\" \"}\n                  </span>\n              </div>\n  \n              <div className=\"input-group mb-3\">\n                <div className=\"btn btn-primary\" onClick={(e) => calculate()}>\n                  Calcular\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        {display && distSelected === options[2].value && (\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Defectos</th>\n              </tr>\n            </thead>\n            <tbody>\n              {biDef.map((e, k) => {\n                return (\n                  <tr scope=\"row\" key={k}>\n                    <td>{k + 1}</td>\n                    <td>{e}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n}\n\nexport default MetodoConvolucion","import React, {useState, useEffect} from 'react'\nimport {standardNormalTable} from 'simple-statistics'\n\nconst MetodoTransformadaInversa = () =>{\n    const options = [{\n        label: 'Normales',\n        value: 'normales'\n    },{\n        label: 'Uniforme Discreta',\n        value: 'uniformeDiscreta',\n        formula: '𝑥𝑖=𝑎+(𝑏−𝑎)𝑟𝑖'\n    },{\n        label: 'Exponencial',\n        value: 'exponencial',\n        formula: '𝑥𝑖=−1/𝜆 ln⁡(1−𝑟𝑖)'\n    },{\n        label: 'Bernoulli',\n        value: 'bernoulli',\n        formula: '𝑝(𝑋)=𝑝^𝑥 (1−𝑝)^(1−𝑥)'\n    },{\n        label: 'Poisson',\n        value: 'poisson',\n        formula: '𝑝(𝑥)=  (𝜆^𝑥 𝑒^(−𝜆))/𝑥!'\n    }]\n    let [distSelected, setDistSelected] = useState(options[0].value);\n    let [distName, setDistName] = useState(\"Selecciona una Distribución\");\n    let [distFormulaStr, setDistFormulaStr] = useState(\"\");\n    let [display, setDisplay] = useState(false);\n    let [uniVarA, setUniVarA] = useState(0);\n    let [uniVarBmA, setUniVarBmA] = useState(0);\n    let [uniResults, setUniResults] = useState([]);\n    let [expVarDelta, setExpVarDelta] = useState(0);\n    let [expResults, setExpResults] = useState([]);\n    let [berVarSuccess, setBerVarSuccess] = useState(0);\n    let [berResults, setBerResults] = useState([]);\n    let [poiVarProbSize, setPoiVarProbSize] = useState(0);\n    let [poiVarDelta, setPoiVarDelta] = useState(0);\n    let [poiResults, setPoiResults] = useState([]);\n    let [b, setB] = useState([]);\n    let [currentNum, setCurrentNum] = useState('');\n    let [numbersCSVString, setNumbersCSVString] = useState('');\n    let [numbers, setNumbers] = useState([]);\n    let [normalResults, setNormalResults] = useState([]);\n    let [normalRanges, setNormalRanges] = useState([]);\n\n    useEffect(() => {\n        if (distSelected === options[1].value) {\n            setDistName(options[1].label)\n            setDistFormulaStr(options[1].formula)\n        } else if (distSelected === options[2].value) {\n            setDistName(options[2].label)\n            setDistFormulaStr(options[2].formula)\n        } else if (distSelected === options[3].value) {\n            setDistName(options[3].label)\n            setDistFormulaStr(options[3].formula)\n        } else if (distSelected === options[4].value) {\n            setDistName(options[4].label)\n            setDistFormulaStr(options[4].formula)\n        }\n    }, [distSelected]);\n\n    const addCSVValues = () => {\n        let nums = numbersCSVString.split(',').map((e)=>parseFloat(e));\n        setNumbers([...nums])\n    }\n    const addValueToArray = () =>{\n        let temp = [...numbers, currentNum];\n        setNumbers(temp);\n        setCurrentNum('');\n    }\n\n    const getRanges = () =>{\n        return [1-standardNormalTable[300],\n        1-standardNormalTable[200],\n        1-standardNormalTable[100],\n        standardNormalTable[0],\n        standardNormalTable[100],\n        standardNormalTable[200],\n        1\n    ]\n    }\n    const getNormalValue = (val) => {\n        let ranges = getRanges();\n        if(val>0&&val<ranges[0]){\n            return -3;\n        } else if(val>ranges[0]&&val<ranges[1]){\n            return -2;\n        } else if(val>ranges[1]&&val<ranges[2]){\n            return -1;\n        } else if(val>ranges[2]&&val<ranges[3]){\n            return 0;\n        } else if(val>ranges[3]&&val<ranges[4]){\n            return 1;\n        } else if(val>ranges[4]&&val<ranges[5]){\n            return 2;\n        } else if(val>ranges[5]&&val<ranges[6]){\n            return 3;\n        }\n    }\n\n    const calcDistNormal = (list) => {\n        let tempSol = [];\n        for(let i = 0; i < list.length; i++){\n            tempSol.push({ri: list[i], value: getNormalValue(list[i])})\n        }\n        let tempRanges = getRanges()\n        setNormalRanges([`0 - ${tempRanges[0].toFixed(4)}`,\n        `${tempRanges[0].toFixed(4)} - ${tempRanges[1].toFixed(4)}`,\n        `${tempRanges[1].toFixed(4)} - ${tempRanges[2].toFixed(4)}`,\n        `${tempRanges[2].toFixed(4)} - ${tempRanges[3].toFixed(4)}`,\n        `${tempRanges[3].toFixed(4)} - ${tempRanges[4].toFixed(4)}`,\n        `${tempRanges[4].toFixed(4)} - ${tempRanges[5].toFixed(4)}`,\n        `${tempRanges[5].toFixed(4)} - ${tempRanges[6].toFixed(4)}`])\n        setNormalResults(tempSol);\n    }\n    const calcDistUniforme = (list) => {\n        let tempUniResults = []\n        list.forEach((ri) => {\n            let obj = {\n                ri: ri,\n                xi: uniVarA + (uniVarBmA * ri)\n            }\n            tempUniResults.push(obj)\n        })\n        setUniResults(tempUniResults)\n    }\n\n    const calcDistExponencial = (list) => {\n        let tempExpResults = []\n        list.forEach((ri) => {\n            let obj = {\n                ri: ri,\n                xi: (Math.log(1 - ri) * (expVarDelta)) * -1\n            }\n            tempExpResults.push(obj)\n        })\n        setExpResults(tempExpResults)\n    }\n\n    const calcDistBernoulli = (list) => {\n        let tempBerResults = []\n        list.forEach((ri) => {\n            let obj = {\n                ri: ri,\n                xi: (ri >= berVarSuccess) ? 1 : 0\n            }\n            tempBerResults.push(obj)\n        })\n        setBerResults(tempBerResults)\n    }\n\n    const factorial = (num) => {\n        let rval = 1;\n        for (let i = 2; i <= num; i++)\n            rval = rval * i;\n        return rval;\n    }\n\n    const getProbabilityForPoisson = () => {\n        let table = []\n        let acumPx = 0\n        for (let i = 0; i <= poiVarProbSize; i++) {\n            let px = (Math.pow(poiVarDelta, i) * Math.exp(-poiVarDelta)) / (factorial(i))\n            acumPx += px\n            let obj = {\n                x: i,\n                px: px.toFixed(4),\n                acum: acumPx.toFixed(4)\n            }\n            table.push(obj)\n        }\n        return table\n    }\n\n    const findInProbTable = (table, needle) => {\n        let prevAcum = 0\n\n        for (let i = 0; i <= poiVarProbSize; i++) {\n            if (needle >= prevAcum && needle <= table[i].acum) {\n                return table[i].x\n            }\n            prevAcum = table[i].acum\n        }\n        return 0\n    }\n\n    const calcDistPoisson = (list) => {\n        let table = getProbabilityForPoisson()\n        let tempPoissonResults = []\n        list.forEach((ri) => {\n            let obj = {\n                ri: ri,\n                xi: findInProbTable(table, ri)\n            }\n            tempPoissonResults.push(obj)\n        })\n        setPoiResults(tempPoissonResults)\n    }\n\n    const calculate = () => {\n        if(distSelected === options[0].value){\n            calcDistNormal(numbers)\n        }else if (distSelected === options[1].value) {\n            calcDistUniforme(numbers)\n        } else if (distSelected === options[2].value) {\n            calcDistExponencial(numbers)\n        } else if (distSelected === options[3].value) {\n            calcDistBernoulli(numbers)\n        } else if (distSelected === options[4].value) {\n            calcDistPoisson(numbers)\n        }\n        setDisplay(true)\n    }\n\n\n    return (\n        <div className=\"container\">\n            <div className='row d-flex justify-content-center'>\n                <h1>\n                    Metodo Transformada Inversa\n                </h1>\n            </div>\n            <div className='form-group'>\n\n                <div className='col-6 d-flex flex-column'>\n                    <div className='d-flex flex-column'>\n                        <label for='numero'>Ingresar digitos de uno en uno:</label>\n                        <div className='d-flex'>\n                            <input id='numero' type='text' value={currentNum} onChange={(e)=>setCurrentNum(e.target.value)}/>\n                            <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addValueToArray()}>Agregar</div>\n                        </div>\n                    </div>\n                    <div className='d-flex flex-column'>\n                        <label for='csv'>Ingresar digitos separados por comas (Estilo de un csv):</label>\n                        <div className='d-flex'>\n                            <textarea id='csv' className='form-control' value={numbersCSVString} onChange={(e)=>setNumbersCSVString(e.target.value)}/>\n                            <div className='btn btn-primary ml-auto p-2' onClick={(e)=>addCSVValues()}>Agregar</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='col-6 d-flex flex-wrap inputs' >\n                    {numbers.map((num)=>{\n                        return <p className='number-list'>{num}</p>\n                    })}\n                </div>\n\n                <div className=\"col-6\">\n                    <div className=\"form-group\">\n                        <select className='form-control' value={distSelected} onChange={(e)=>{console.log(e.target);setDistSelected(e.target.value)}}>\n                            {options.map((option)=>{\n                                return <option value={option.value}>{option.label}</option>\n                            })}\n                        </select>\n                    </div>\n                </div>\n            </div>\n\n\n\n            {/* NORMAL */}\n            {distSelected === options[0].value &&\n                <div className=\"container d-flex\">\n                    <div className=\"container col-6\">\n                        <span className=\"col\">{distFormulaStr}</span>\n                    </div>\n                    <div className=\"input-group mb-3\">\n                        <div className='btn btn-primary' onClick={(e) => calculate()}>Calcular</div>\n                    </div>\n                </div>\n\n            }\n            {display && distSelected === options[0].value &&\n            <div>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th>x</th>\n                            <th>Rango Valores</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {normalRanges.map((e, k)=>{\n                            return <tr scope=\"container\" key={k}>\n                                <td>{k+1}</td>\n                                <td>{e}</td>\n                            </tr>\n                        })}\n                    </tbody>\n                </table>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Ri</th>\n                            <th scope=\"col\">Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            normalResults.map((e, k) => {\n                                console.log(e)\n                                return (\n                                    <tr scope=\"container\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.ri}</td>\n                                        <td>{e.value}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n            }\n            {/* UNIFORME */}\n            {distSelected === options[1].value &&\n                <div className=\"container d-flex\">\n                    <div className='form-group col-6'>\n\n                        <div className=\"col-6 d-flex justify-content-between inputs\">\n                            <label for='a' >a: </label>\n                            <input id='a' type='number' min='100' max='999999' onChange={(e) => {setUniVarA(e.target.value * 1); setUniVarBmA(b - uniVarA)}} />\n                        </div>\n\n                        <div className=\"col-6 d-flex justify-content-between inputs\">\n                            <label for='b'>b: </label>\n                            <input type='number' id='b' value={b} min='100' max='999999' onChange={(e) => {setUniVarBmA(e.target.value * 1 - uniVarA); setB(e.target.value * 1)}} />\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className='btn btn-primary' onClick={(e) => calculate()}>Calcular</div>\n                        </div>\n\n                    </div>\n                    <div className=\"container col-6\">\n                        <span className=\"col\">{distFormulaStr}</span>\n                    </div>\n                </div>\n\n            }\n            {display && distSelected === options[1].value &&\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Ri</th>\n                            <th scope=\"col\">Xi</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            uniResults.map((e, k) => {\n                                return (\n                                    <tr scope=\"container\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.ri}</td>\n                                        <td>{e.xi.toFixed(2)}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            }\n            {/* EXPONENCIAL */}\n            {distSelected === options[2].value &&\n                <div className=\"container d-flex\">\n                    <div className='form-group col-6'>\n\n                        <div className=\"col-6 d-flex justify-content-between inputs\">\n                            <label for='lambda'>𝜆 : </label>\n                            <input type='number' id='lambda' min='100' max='999999' onChange={(e) => setExpVarDelta(e.target.value * 1)} />\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className='btn btn-primary' onClick={(e) => calculate()}>Calcular</div>\n                        </div>\n\n                    </div>\n                    <div className=\"container col-6\">\n                        <span className=\"col\">{distFormulaStr}</span>\n                    </div>\n                </div>\n            }\n            {display && distSelected === options[2].value &&\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Ri</th>\n                            <th scope=\"col\">Xi</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            expResults.map((e, k) => {\n                                return (\n                                    <tr scope=\"container\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.ri}</td>\n                                        <td>{e.xi.toFixed(2)}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            }\n            {/* BERNOULLI */}\n            {distSelected === options[3].value &&\n                <div className=\"container d-flex\">\n                    <div className='form-group'>\n\n                        <div className=\"col-6 d-flex justify-content-between inputs\">\n                            <label for='p'>P: </label>\n                            <input type='number' id='p' max='999999' onChange={(e) => setBerVarSuccess(e.target.value * 1)} />\n                            <span  >% Probabilidad de éxito </span>\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className='btn btn-primary' onClick={(e) => calculate()}>Calcular</div>\n                        </div>\n\n                    </div>\n                    <div className=\"container col-6\">\n                        <span className=\"col\">{distFormulaStr}</span>\n                    </div>\n                </div>\n            }\n            {display && distSelected === options[3].value &&\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Ri</th>\n                            <th scope=\"col\">Xi</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            berResults.map((e, k) => {\n                                return (\n                                    <tr scope=\"container\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.ri}</td>\n                                        <td>{e.xi}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            }\n            {/* POISSON */}\n            {distSelected === options[4].value &&\n                <div className=\"container d-flex\">\n                    <div className='form-group'>\n\n                        <div className=\"col-6 d-flex justify-content-between inputs\">\n                            <label for='lambda'>𝜆 : </label>\n                            <input type='number' id='lambda' min='100' max='999999' onChange={(e) => setPoiVarDelta(e.target.value * 1)} />\n                        </div>\n\n                        <div className=\"col-6 d-flex justify-content-between inputs\">\n                            <label for='n'>N : </label>\n                            <input type='number' id='n' onChange={(e) => setPoiVarProbSize(e.target.value * 1)} />\n                            <span >Probabilidades a calcular</span>\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className='btn btn-primary' onClick={(e) => calculate()}>Calcular</div>\n                        </div>\n\n                    </div>\n                    <div className=\"container col-6\">\n                        <span className=\"col\">{distFormulaStr}</span>\n                    </div>\n                </div>\n            }\n            {display && distSelected === options[4].value &&\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Ri</th>\n                            <th scope=\"col\">Xi</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            poiResults.map((e, k) => {\n                                return (\n                                    <tr scope=\"container\" key={k}>\n                                        <td>{k + 1}</td>\n                                        <td>{e.ri}</td>\n                                        <td>{e.xi}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            }\n\n\n\n        </div>\n    )\n}\n\nexport default MetodoTransformadaInversa","import React from \"react\";\nimport \"./styles/App.scss\";\nimport Header from \"./components/header\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TypeSelector from './components/typeSelector'\nimport AlgoritmoCuadradosMedios from \"./components/algoritmos/algoritmoCuadradosMedios\";\nimport AlgoritmoMultiplicadorConstante from \"./components/algoritmos/algoritmoMultiplicadorConstante\";\nimport AlgoritmoLineal from \"./components/algoritmos/algoritmoLineal\";\nimport AlgoritmoCongruencialMultiplicativo from \"./components/algoritmos/algortimoCongruencialMultiplicativo\";\nimport AlgoritmoCongruencialAditivo from \"./components/algoritmos/algortimoCongruencialAditivo\";\nimport AlgoritmoCongruencialCuadratico from \"./components/algoritmos/algortimoCongruencialCuadratico\";\nimport AlgoritmoProductosMedios from \"./components/algoritmos/algoritmoProductosMedios\";\nimport PruebaVarianza from \"./components/pruebas/pruebaVarianza\";\nimport PruebaUnidormidadChiCuadrada from \"./components/pruebas/pruebaUniformidadChiCuadrada\";\nimport PruebaHuecos from \"./components/pruebas/pruebaHuecos\";\nimport PruebaCorrArrAbMed from \"./components/pruebas/pruebaIndCorrArrAbMed\";\nimport PruebaIndepCorrArrAb from \"./components/pruebas/pruebaIndepCorrArrAb\";\nimport PruebaMedias from \"./components/pruebas/pruebaMedias\";\nimport PruebaPoker from \"./components/pruebas/pruebaPoker\";\nimport PruebaSerie from \"./components/pruebas/pruebaSeries\";\nimport PruebaUniformidadKolSmir from \"./components/pruebas/pruebaUniformidadKolSmir\";\nimport MetodoConvolucion from \"./components/metodos/metodoConvolucion\";\nimport MetodoTransformadaInversa from \"./components/metodos/metodoTransformadaInversa\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <div className=\"body\">\n        <TypeSelector />\n        <Switch>\n          <div className=\"container rest-body\">\n            <Route exact path=\"/algoritmo-cuadrados-medios\">\n              <AlgoritmoCuadradosMedios />\n            </Route>\n            <Route exact path=\"/algoritmo-productos-medios\">\n              <AlgoritmoProductosMedios />\n            </Route>\n            <Route exact path=\"/algoritmo-multiplicador-constante\">\n              <AlgoritmoMultiplicadorConstante />\n            </Route>\n            <Route exact path=\"/algoritmo-lineal\">\n              <AlgoritmoLineal />\n            </Route>\n            <Route exact path=\"/algoritmo-congruencial-multiplicativo\">\n              <AlgoritmoCongruencialMultiplicativo />\n            </Route>\n            <Route exact path=\"/algoritmo-congruencial-aditivo\">\n              <AlgoritmoCongruencialAditivo />\n            </Route>\n            <Route exact path=\"/algoritmo-congruencial-cuadratico\">\n              <AlgoritmoCongruencialCuadratico />\n            </Route>\n            <Route exact path=\"/pruebas-medias\">\n              <PruebaMedias />\n            </Route>\n            <Route exact path=\"/prueba-varianza\">\n              <PruebaVarianza />\n            </Route>\n            <Route exact path=\"/prueba-uniformidad-chi-cuadrada\">\n              <PruebaUnidormidadChiCuadrada />\n            </Route>\n            <Route exact path=\"/pruba-uniformidad-kolmogorov-smirnov\">\n              <PruebaUniformidadKolSmir />\n            </Route>\n            <Route exact path=\"/prueba-independencia-corridas-arriba-abajo\">\n              <PruebaIndepCorrArrAb />\n            </Route>\n            <Route\n              exact\n              path=\"/prueba-independencia-corridas-arriba-abajo-media\"\n            >\n              <PruebaCorrArrAbMed />\n            </Route>\n            <Route exact path=\"/prueba-poker\">\n              <PruebaPoker />\n            </Route>\n            <Route exact path=\"/prueba-series\">\n              <PruebaSerie />\n            </Route>\n            <Route exact path=\"/prueba-huecos\">\n              <PruebaHuecos />\n            </Route>\n            {/*\n            <Route exact path=\"/pruba-distribucion-chi-cuadrada\">\n              <PruebaDstrbcnChiCdrd />\n            </Route>\n            <Route exact path=\"/prueba-kolmogorov-smirnov\">\n              <PruebaKolSmir />\n            </Route>\n            */}\n            <Route exact path=\"/metodo-transformada-inversa\">\n              <MetodoTransformadaInversa />\n            </Route>\n            <Route exact path=\"/metodo-convolucion\">\n              <MetodoConvolucion />\n            </Route>\n          </div>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const getMiddleValues = (num, d) =>{\n    let numString = num.toString();\n    numString = (numString.length - d)%2 == 0 ? '' +numString : '0' +numString;\n    let stringLength = Math.floor((numString.length-d)/2);\n    let finalString = numString.slice(stringLength, stringLength+d);\n    return finalString;\n}\n\nconst transformToR = (x, d) => (x*Math.pow(10,-d)).toFixed(d);\n\nmodule.exports = {getMiddleValues, transformToR};"],"sourceRoot":""}